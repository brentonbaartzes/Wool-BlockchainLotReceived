<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/22/2020 10:02:22 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="PLZ-BRENTONB-L"
  DTS:CreatorName="PEHO\brenton.baartzes"
  DTS:DTSID="{9911204B-A255-4BF9-8D8B-12A40AA2A5AE}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.121"
  DTS:LocaleID="7177"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="563"
  DTS:VersionGUID="{5D39BFF0-140C-4EA4-9700-E653CAF92D4B}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LotReveivedLog.txt]"
      DTS:CreationName="FILE"
      DTS:DTSID="{916D8336-2A5D-4005-9754-0A876AC63779}"
      DTS:ObjectName="LotReveivedLog.txt">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="C:\SHIFTDX\SSIS Logs\WOOL_RECEIVED\LotReveivedLog.txt" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="LotReveivedLog.txt"
      DTS:CreationName="Microsoft.LogProviderTextFile"
      DTS:Description="Writes log entries for events to a CSV file"
      DTS:DTSID="{C69152B5-6489-4050-B908-E8F4D7BDF8A1}"
      DTS:ObjectName="SSIS log provider for Text files1">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EBCAB29C-D1BD-4F61-9880-B1BF39E0E747}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varBC_WoolReceiptID">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{23F03E03-F184-483F-8F18-7BC17C5D6E63}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Variable">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5A578EEE-8400-4204-8936-37E7921419F0}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varLotReceivedResultList">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F1EE164E-D03E-445A-BE8A-00D9EC789962}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varRFIDTagDiff">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{53973D15-2A2F-41FA-8665-D0B06C1ECF1A}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varWoolReceiptList">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">2,7,OnError,12,OnTaskFailed</DTS:Property>
    <DTS:Property
      DTS:EventName="Diagnostic"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="DiagnosticEx"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnExecStatusChanged"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnInformation"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPostExecute"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPostValidate"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPreExecute"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPreValidate"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnProgress"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnQueryCancel"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnTaskFailed"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnVariableValueChanged"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnWarning"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{C69152B5-6489-4050-B908-E8F4D7BDF8A1}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:Disabled="True"
      DTS:DTSID="{A00CD540-411C-484E-86A2-4A4378985EA7}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Data Flow Task - Populate BC_STG_WoolReceipt"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="2" />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination."
              name="BC_STG_WoolReceipt"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.String"
                  description="The Destination database table name."
                  expressionType="Notify"
                  name="TableOrViewName"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">"dbo"."BC_STG_WoolReceipt"</property>
                <property
                  dataType="System.Int32"
                  description="Specify the number of rows per batch. The default is 0 which uses the same size as SSIS internal buffer. "
                  expressionType="Notify"
                  name="BatchSize">0</property>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out. A value of 0 indicates infinite time-out. "
                  expressionType="Notify"
                  name="CommandTimeout">30</property>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether to use the SqlBulkCopy interface to improve the performance of bulk insert operations. Only certain providers support this interface."
                  expressionType="Notify"
                  name="UseBulkInsertWhenPossible">true</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ADONETDestination</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Connections[IDbConnection]"
                  connectionManagerID="{0171E157-04D9-4D7D-8EBC-6B7E3909523F}:external"
                  connectionManagerRefId="Project.ConnectionManagers[PLZ-BRENTONB-L_BRENTONB.SHIFTDX_BC_WOOL_PROD]"
                  description="Managed connection manager"
                  name="IDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input]"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="ADO NET Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].Columns[Wool Receipt Date]"
                      cachedDataType="dbDate"
                      cachedName="Wool Receipt Date"
                      externalMetadataColumnId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].ExternalColumns[Wool Receipt Date]"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].Columns[Wool Receipt Date]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].Columns[Talman Reference Number]"
                      cachedDataType="wstr"
                      cachedLength="8"
                      cachedName="Talman Reference Number"
                      externalMetadataColumnId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].ExternalColumns[Talman Reference Number]"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].Columns[Talman Reference Number]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].Columns[LotNo-Cat-Season]"
                      cachedDataType="wstr"
                      cachedLength="16"
                      cachedName="LotNo-Cat-Season"
                      externalMetadataColumnId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].ExternalColumns[LotNo-Cat-Season]"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].Columns[LotNo-Cat-Season]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].Columns[Gross KG (Lot)]"
                      cachedDataType="numeric"
                      cachedName="Gross KG (Lot)"
                      cachedPrecision="11"
                      cachedScale="2"
                      externalMetadataColumnId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].ExternalColumns[Gross KG (Lot)]"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].Columns[Gross KG (Lot)]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].Columns[Lot Location]"
                      cachedDataType="wstr"
                      cachedLength="1"
                      cachedName="Lot Location"
                      externalMetadataColumnId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].ExternalColumns[Lot Location]"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].Columns[Lot Location]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].Columns[Lot Location Date]"
                      cachedDataType="wstr"
                      cachedLength="1"
                      cachedName="Lot Location Date"
                      externalMetadataColumnId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].ExternalColumns[Lot Location Date]"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].Columns[Lot Location Date]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].Columns[StyleType]"
                      cachedDataType="wstr"
                      cachedLength="3"
                      cachedName="StyleType"
                      externalMetadataColumnId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].ExternalColumns[StyleType]"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].Columns[StyleType]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].Columns[Bale ID]"
                      cachedDataType="nText"
                      cachedName="Bale ID"
                      externalMetadataColumnId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].ExternalColumns[Bale ID]"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].Columns[Bale ID]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].Columns[Mulesing Status]"
                      cachedDataType="wstr"
                      cachedLength="11"
                      cachedName="Mulesing Status"
                      externalMetadataColumnId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].ExternalColumns[Mulesing Status]"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].Columns[Mulesing Status]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].Columns[RWS Status]"
                      cachedDataType="nText"
                      cachedName="RWS Status"
                      externalMetadataColumnId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].ExternalColumns[RWS Status]"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].Columns[RWS Status]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].Columns[RWS Certification Details]"
                      cachedDataType="nText"
                      cachedName="RWS Certification Details"
                      externalMetadataColumnId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].ExternalColumns[RWS Certification Details]"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].Columns[RWS Certification Details]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].Columns[Storage Org]"
                      cachedDataType="wstr"
                      cachedLength="5"
                      cachedName="Storage Org"
                      externalMetadataColumnId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].ExternalColumns[Storage Org]"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].Columns[Storage Org]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].Columns[Lot No.]"
                      cachedDataType="wstr"
                      cachedLength="8"
                      cachedName="Lot No."
                      externalMetadataColumnId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].ExternalColumns[Lot No#]"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].Columns[Lot No.]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].Columns[No. of Bales]"
                      cachedDataType="numeric"
                      cachedName="No. of Bales"
                      cachedPrecision="4"
                      externalMetadataColumnId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].ExternalColumns[No# of Bales]"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].Columns[No. of Bales]" />
                    <inputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].Columns[Producer No.]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="Producer No."
                      externalMetadataColumnId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].ExternalColumns[Producer No#]"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].Columns[Producer No.]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].ExternalColumns[Id]"
                      dataType="i8"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].ExternalColumns[Lot No#]"
                      dataType="wstr"
                      length="2147483647"
                      name="Lot No#" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].ExternalColumns[Wool Receipt Date]"
                      dataType="dbTimeStamp"
                      name="Wool Receipt Date" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].ExternalColumns[Talman Reference Number]"
                      dataType="wstr"
                      length="2147483647"
                      name="Talman Reference Number" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].ExternalColumns[LotNo-Cat-Season]"
                      dataType="wstr"
                      length="2147483647"
                      name="LotNo-Cat-Season" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].ExternalColumns[Gross KG (Lot)]"
                      dataType="numeric"
                      name="Gross KG (Lot)"
                      precision="11"
                      scale="2" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].ExternalColumns[Lot Location]"
                      dataType="wstr"
                      length="2147483647"
                      name="Lot Location" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].ExternalColumns[Lot Location Date]"
                      dataType="wstr"
                      length="2147483647"
                      name="Lot Location Date" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].ExternalColumns[StyleType]"
                      dataType="wstr"
                      length="2147483647"
                      name="StyleType" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].ExternalColumns[Bale ID]"
                      dataType="wstr"
                      length="2147483647"
                      name="Bale ID" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].ExternalColumns[No# of Bales]"
                      dataType="numeric"
                      name="No# of Bales"
                      precision="4" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].ExternalColumns[Mulesing Status]"
                      dataType="wstr"
                      length="2147483647"
                      name="Mulesing Status" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].ExternalColumns[RWS Status]"
                      dataType="wstr"
                      length="2147483647"
                      name="RWS Status" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].ExternalColumns[RWS Certification Details]"
                      dataType="wstr"
                      length="2147483647"
                      name="RWS Certification Details" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].ExternalColumns[Producer No#]"
                      dataType="wstr"
                      length="2147483647"
                      name="Producer No#" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input].ExternalColumns[Storage Org]"
                      dataType="wstr"
                      length="2147483647"
                      name="Storage Org" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Outputs[ADO NET Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="ADO NET Destination Error Output"
                  synchronousInputId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server."
              name="BC_vw_WoolReceipt"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement used by the component to extract data."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">30</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether to allow non-string external columns to be implicitly converted to strings at the output columns."
                  name="AllowImplicitStringConversion">true</property>
                <property
                  dataType="System.String"
                  description="The Source database table name."
                  expressionType="Notify"
                  name="TableOrViewName"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">"dbo"."BC_vw_WoolReceipt"</property>
                <property
                  dataType="System.Int32"
                  description="Specify the mode to retrieve external column information"
                  name="AccessMode"
                  typeConverter="Microsoft.SqlServer.Dts.Pipeline.DataReaderSourceAdapter+EnumToStringConverter">0</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.DataReaderSourceAdapter</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Connections[IDbConnection]"
                  connectionManagerID="{FD10FD16-36E2-45AD-9536-650E87EB15EB}:external"
                  connectionManagerRefId="Project.ConnectionManagers[10.0.65.75.BKB_EDW_PROD]"
                  description="Managed connection manager"
                  name="IDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output]"
                  name="ADO NET Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].Columns[Lot No.]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].ExternalColumns[Lot No.]"
                      length="8"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].Columns[Lot No.]"
                      name="Lot No."
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].Columns[Wool Receipt Date]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].ExternalColumns[Wool Receipt Date]"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].Columns[Wool Receipt Date]"
                      name="Wool Receipt Date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].Columns[Talman Reference Number]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].ExternalColumns[Talman Reference Number]"
                      length="8"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].Columns[Talman Reference Number]"
                      name="Talman Reference Number"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].Columns[LotNo-Cat-Season]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].ExternalColumns[LotNo-Cat-Season]"
                      length="16"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].Columns[LotNo-Cat-Season]"
                      name="LotNo-Cat-Season"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].Columns[Gross KG (Lot)]"
                      dataType="numeric"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].ExternalColumns[Gross KG (Lot)]"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].Columns[Gross KG (Lot)]"
                      name="Gross KG (Lot)"
                      precision="11"
                      scale="2"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].Columns[Lot Location]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].ExternalColumns[Lot Location]"
                      length="1"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].Columns[Lot Location]"
                      name="Lot Location"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].Columns[Lot Location Date]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].ExternalColumns[Lot Location Date]"
                      length="1"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].Columns[Lot Location Date]"
                      name="Lot Location Date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].Columns[StyleType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].ExternalColumns[StyleType]"
                      length="3"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].Columns[StyleType]"
                      name="StyleType"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].Columns[Bale ID]"
                      dataType="nText"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].ExternalColumns[Bale ID]"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].Columns[Bale ID]"
                      name="Bale ID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].Columns[No. of Bales]"
                      dataType="numeric"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].ExternalColumns[No. of Bales]"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].Columns[No. of Bales]"
                      name="No. of Bales"
                      precision="4"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].Columns[Mulesing Status]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].ExternalColumns[Mulesing Status]"
                      length="11"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].Columns[Mulesing Status]"
                      name="Mulesing Status"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].Columns[RWS Status]"
                      dataType="nText"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].ExternalColumns[RWS Status]"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].Columns[RWS Status]"
                      name="RWS Status"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].Columns[RWS Certification Details]"
                      dataType="nText"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].ExternalColumns[RWS Certification Details]"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].Columns[RWS Certification Details]"
                      name="RWS Certification Details"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].Columns[Producer No.]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].ExternalColumns[Producer No.]"
                      length="10"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].Columns[Producer No.]"
                      name="Producer No."
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].Columns[Storage Org]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].ExternalColumns[Storage Org]"
                      length="5"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].Columns[Storage Org]"
                      name="Storage Org"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].ExternalColumns[Lot No.]"
                      dataType="wstr"
                      length="8"
                      name="Lot No." />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].ExternalColumns[Wool Receipt Date]"
                      dataType="dbDate"
                      name="Wool Receipt Date" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].ExternalColumns[Talman Reference Number]"
                      dataType="wstr"
                      length="8"
                      name="Talman Reference Number" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].ExternalColumns[LotNo-Cat-Season]"
                      dataType="wstr"
                      length="16"
                      name="LotNo-Cat-Season" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].ExternalColumns[Gross KG (Lot)]"
                      dataType="numeric"
                      name="Gross KG (Lot)"
                      precision="11"
                      scale="2" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].ExternalColumns[Lot Location]"
                      dataType="wstr"
                      length="1"
                      name="Lot Location" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].ExternalColumns[Lot Location Date]"
                      dataType="wstr"
                      length="1"
                      name="Lot Location Date" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].ExternalColumns[StyleType]"
                      dataType="wstr"
                      length="3"
                      name="StyleType" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].ExternalColumns[Bale ID]"
                      dataType="nText"
                      name="Bale ID" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].ExternalColumns[No. of Bales]"
                      dataType="numeric"
                      name="No. of Bales"
                      precision="4" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].ExternalColumns[Mulesing Status]"
                      dataType="wstr"
                      length="11"
                      name="Mulesing Status" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].ExternalColumns[RWS Status]"
                      dataType="nText"
                      name="RWS Status" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].ExternalColumns[RWS Certification Details]"
                      dataType="nText"
                      name="RWS Certification Details" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].ExternalColumns[Producer No.]"
                      dataType="wstr"
                      length="10"
                      name="Producer No." />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output].ExternalColumns[Storage Org]"
                      dataType="wstr"
                      length="5"
                      name="Storage Org" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Error Output]"
                  isErrorOut="true"
                  name="ADO NET Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Error Output].Columns[Lot No.]"
                      dataType="wstr"
                      length="8"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Error Output].Columns[Lot No.]"
                      name="Lot No." />
                    <outputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Error Output].Columns[Wool Receipt Date]"
                      dataType="dbDate"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Error Output].Columns[Wool Receipt Date]"
                      name="Wool Receipt Date" />
                    <outputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Error Output].Columns[Talman Reference Number]"
                      dataType="wstr"
                      length="8"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Error Output].Columns[Talman Reference Number]"
                      name="Talman Reference Number" />
                    <outputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Error Output].Columns[LotNo-Cat-Season]"
                      dataType="wstr"
                      length="16"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Error Output].Columns[LotNo-Cat-Season]"
                      name="LotNo-Cat-Season" />
                    <outputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Error Output].Columns[Gross KG (Lot)]"
                      dataType="numeric"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Error Output].Columns[Gross KG (Lot)]"
                      name="Gross KG (Lot)"
                      precision="11"
                      scale="2" />
                    <outputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Error Output].Columns[Lot Location]"
                      dataType="wstr"
                      length="1"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Error Output].Columns[Lot Location]"
                      name="Lot Location" />
                    <outputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Error Output].Columns[Lot Location Date]"
                      dataType="wstr"
                      length="1"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Error Output].Columns[Lot Location Date]"
                      name="Lot Location Date" />
                    <outputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Error Output].Columns[StyleType]"
                      dataType="wstr"
                      length="3"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Error Output].Columns[StyleType]"
                      name="StyleType" />
                    <outputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Error Output].Columns[Bale ID]"
                      dataType="nText"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Error Output].Columns[Bale ID]"
                      name="Bale ID" />
                    <outputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Error Output].Columns[No. of Bales]"
                      dataType="numeric"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Error Output].Columns[No. of Bales]"
                      name="No. of Bales"
                      precision="4" />
                    <outputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Error Output].Columns[Mulesing Status]"
                      dataType="wstr"
                      length="11"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Error Output].Columns[Mulesing Status]"
                      name="Mulesing Status" />
                    <outputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Error Output].Columns[RWS Status]"
                      dataType="nText"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Error Output].Columns[RWS Status]"
                      name="RWS Status" />
                    <outputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Error Output].Columns[RWS Certification Details]"
                      dataType="nText"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Error Output].Columns[RWS Certification Details]"
                      name="RWS Certification Details" />
                    <outputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Error Output].Columns[Producer No.]"
                      dataType="wstr"
                      length="10"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Error Output].Columns[Producer No.]"
                      name="Producer No." />
                    <outputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Error Output].Columns[Storage Org]"
                      dataType="wstr"
                      length="5"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Error Output].Columns[Storage Org]"
                      name="Storage Org" />
                    <outputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Data Flow Task - Populate BC_STG_WoolReceipt.Paths[ADO NET Source Output]"
              endId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt.Inputs[ADO NET Destination Input]"
              name="ADO NET Source Output"
              startId="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt.Outputs[ADO NET Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task - Truncate BC_STG_WoolReceipt"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:Disabled="True"
      DTS:DTSID="{5A4389E5-95F6-44A6-BDCE-2CF400EEE99E}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task - Truncate BC_STG_WoolReceipt"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="2" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{0171E157-04D9-4D7D-8EBC-6B7E3909523F}"
          SQLTask:SqlStatementSource="truncate table BC_STG_WoolReceipt" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task Merge BC_STG_WoolReceipt and BC_WoolReceipt"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:Disabled="True"
      DTS:DTSID="{6313D49E-5745-4442-AD08-7A5310727D83}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task Merge BC_STG_WoolReceipt and BC_WoolReceipt"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="2" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{0171E157-04D9-4D7D-8EBC-6B7E3909523F}"
          SQLTask:SqlStatementSource="MERGE INTO BC_WoolReceipt WITH (HOLDLOCK) AS target&#xA;USING BC_STG_WoolReceipt AS source&#xA;    ON target.[Talman Reference Number] = source.[Talman Reference Number]&#xA;WHEN MATCHED AND&#xA;(target.[Lot No#] &lt;&gt; source.[Lot No#]) OR&#xA;(target.[Wool Receipt Date] &lt;&gt; source.[Wool Receipt Date]) OR&#xA;(target.[LotNo-Cat-Season] &lt;&gt; source.[LotNo-Cat-Season]) OR&#xA;(target.[Gross KG (Lot)] &lt;&gt; source.[Gross KG (Lot)]) OR&#xA;(target.[Lot Location] &lt;&gt; source.[Lot Location]) OR&#xA;(target.[Lot Location Date] &lt;&gt; source.[Lot Location Date]) OR&#xA;(target.[StyleType] &lt;&gt; source.[StyleType]) OR&#xA;(target.[Bale ID] &lt;&gt; source.[Bale ID]) OR&#xA;(target.[No# of Bales] &lt;&gt; source.[No# of Bales]) OR&#xA;(target.[Mulesing Status] &lt;&gt; source.[Mulesing Status]) OR&#xA;(target.[RWS Status] &lt;&gt; source.[RWS Status]) OR&#xA;(target.[RWS Certification Details] &lt;&gt; source.[RWS Certification Details]) OR&#xA;(target.[Producer No#] &lt;&gt; source.[Producer No#]) OR&#xA;(target.[Storage Org] &lt;&gt; source.[Storage Org])&#xA;THEN &#xA;    UPDATE SET target.[Lot No#] = source.[Lot No#], target.[Wool Receipt Date] = source.[Wool Receipt Date], target.[Talman Reference Number] = source.[Talman Reference Number], &#xA;&#x9;target.[LotNo-Cat-Season] = source.[LotNo-Cat-Season], target.[Gross KG (Lot)] = source.[Gross KG (Lot)], target.[Lot Location] = source.[Lot Location], &#xA;&#x9;target.[Lot Location Date] = source.[Lot Location Date], target.[StyleType] = source.[StyleType], target.[Bale ID] = source.[Bale ID], &#xA;&#x9;target.[No# of Bales] = source.[No# of Bales], target.[Mulesing Status] = source.[Mulesing Status], target.[RWS Status] = source.[RWS Status], &#xA;&#x9;target.[RWS Certification Details] = source.[RWS Certification Details], target.[Producer No#] = source.[Producer No#], &#xA;&#x9;target.[Storage Org] = source.[Storage Org], target.Processed = 0, target.DateProcessed = NULL&#xA;WHEN NOT MATCHED BY TARGET THEN&#x9;&#xA;    INSERT ([Lot No#], [Wool Receipt Date], [Talman Reference Number], [LotNo-Cat-Season], [Gross KG (Lot)], [Lot Location], [Lot Location Date],&#xA;&#x9;&#x9;&#x9;[StyleType], [Bale ID], [No# of Bales], [Mulesing Status], [RWS Status], [RWS Certification Details], [Producer No#], [Storage Org], &#xA;&#x9;&#x9;&#x9;Processed, DateProcessed)&#xA;    VALUES (source.[Lot No#], source.[Wool Receipt Date], source.[Talman Reference Number], source.[LotNo-Cat-Season], source.[Gross KG (Lot)], &#xA;&#x9;source.[Lot Location], source.[Lot Location Date], source.[StyleType], source.[Bale ID], source.[No# of Bales],source.[Mulesing Status], &#xA;&#x9;source.[RWS Status], source.[RWS Certification Details], source.[Producer No#], source.[Storage Org], 0, NULL);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task Merge RFID Tags"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:Disabled="True"
      DTS:DTSID="{45642917-F5A3-429E-9939-D4F89F8E44BB}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task Merge RFID Tags"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{0171E157-04D9-4D7D-8EBC-6B7E3909523F}"
          SQLTask:SqlStatementSource="MERGE INTO BC_WoolReceipt WITH (HOLDLOCK) AS target&#xA;USING BC_STG_WoolReceipt AS source&#xA;    ON target.[Talman Reference Number] = source.[Talman Reference Number]&#xA;WHEN MATCHED AND&#xA;(ISNULL(target.[Bale ID], '') &lt;&gt; ISNULL(source.[Bale ID], ''))&#xA;THEN &#xA;    UPDATE &#xA;&#x9;SET target.[Bale ID] = source.[Bale ID], target.Processed = 0, target.DateProcessed = NULL;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Lot Received RFID Tag Differences"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:Disabled="True"
      DTS:DTSID="{BEA36D16-0BE3-4B74-AF2C-9BF287061C5E}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Lot Received RFID Tag Differences"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{0171E157-04D9-4D7D-8EBC-6B7E3909523F}"
          SQLTask:SqlStatementSource="SELECT B.*&#xA;FROM BC_WoolReceipt A&#xA;INNER JOIN BC_STG_WoolReceipt B ON A.[Talman Reference Number] = B.[Talman Reference Number]&#xA;WHERE ISNULL(ltrim(rtrim(A.[Bale ID])), '') != ISNULL(ltrim(rtrim(B.[Bale ID])), '')"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::varRFIDTagDiff" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Lot Received Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{264FC204-1B0C-4FE2-89C7-1A05D2771DE9}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Lot Received Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="1">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="EventFilter">3,7,OnError,12,OnTaskFailed,18,ScriptTaskLogEntry</DTS:Property>
        <DTS:Property
          DTS:EventName="OnError"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnExecStatusChanged"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnInformation"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnPostExecute"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnPostValidate"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnPreExecute"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnPreValidate"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnProgress"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnQueryCancel"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnTaskFailed"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnVariableValueChanged"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnWarning"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="ScriptTaskLogEntry"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:SelectedLogProviders>
          <DTS:SelectedLogProvider
            DTS:InstanceID="{C69152B5-6489-4050-B908-E8F4D7BDF8A1}" />
        </DTS:SelectedLogProviders>
      </DTS:LoggingOptions>
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_ec77aea677144767b21d2eda00bc4004"
          VSTAMajorVersion="14"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="$Project::apikey,$Project::ServicePostUrl,$Project::RecipientId"
          ReadWriteVariables="User::varLotReceivedResultList">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="packages.config"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Newtonsoft.Json" version="12.0.3" targetFramework="net47" />
</packages>]]></ProjectItem>
          <ProjectItem
            Name="LotReceivedDeserialized.cs"
            Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ST_ec77aea677144767b21d2eda00bc4004
{

    public class LotReceivedDeserialized
    {
        //public string asset_type { get; set; }
        //public List<string> references { get; set; }
        //public List<string> tags { get; set; }
    }

    //public class Data
    //{
    //    public string LotNo { get; set; }
    //    public string WoolReceiptDate { get; set; }
    //    public string TalmanReferenceNumber { get; set; }
    //    public string LotNoCategorySeasonNumber { get; set; }
    //    public int GrossKg { get; set; }
    //    public string WoolStyle { get; set; }
    //    public string BaleId { get; set; }
    //    public int NoOfBales { get; set; }
    //    public string MulesingStatus { get; set; }
    //    public string RWSStatus { get; set; }
    //    public string StorageOrg { get; set; }
    //}

    //public class Summary
    //{
    //    public string WoolReceiptDate { get; set; }
    //    public int NoOfBales { get; set; }
    //    public List<string> BaleId { get; set; }
    //    public string WoolStyle { get; set; }
    //    public string RWSStatus { get; set; }
    //}

    //public class Event
    //{
    //    public string event_type { get; set; }
    //    public string visibility { get; set; }
    //    public string event_timestamp { get; set; }
    //    public Data data { get; set; }
    //    public Summary summary { get; set; }
    //}

    //public class Root
    //{
    //    public string document_id { get; set; }
    //    public LotReceivedDeserialized document { get; set; }
    //    public Event @event { get; set; }
    //}

}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_ec77aea677144767b21d2eda00bc4004</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_ec77aea677144767b21d2eda00bc4004</msb:DisplayName>
		<msb:ProjectId>{38934825-85A0-49C3-B29A-5585C95B04EC}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_ec77aea677144767b21d2eda00bc4004.csproj"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="LotReceivedModelPublicClass.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="LotReceivedModel.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="LotReceivedModelV2.cs"/>
		<msb:File Include="LotReceivedDeserialized.cs"/>
		<msb:File Include="packages.config"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
		<msb:File Include="LotReceivedModelPrivateClass.cs"/>
		<msb:Breakpoint Include="2da5e6e177c34836999726fed43ff0cc">
			<msb:FileName>ScriptMain.cs</msb:FileName>
			<msb:ColumnNumber>40</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:LineNumber>354</msb:LineNumber>
			<msb:Condition></msb:Condition>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
		<msb:Breakpoint Include="802b22b7deb840baae49e0e872167650">
			<msb:FileName>ScriptMain.cs</msb:FileName>
			<msb:ColumnNumber>29</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:LineNumber>346</msb:LineNumber>
			<msb:Condition></msb:Condition>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="ST_ec77aea677144767b21d2eda00bc4004.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{0ED515DC-795D-4947-800E-0AF1287B3272}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_ec77aea677144767b21d2eda00bc4004</RootNamespace>
    <AssemblyName>ST_ec77aea677144767b21d2eda00bc4004</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile>
    </TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <HintPath>C:\Users\brenton.baartzes\AppData\Local\Temp\Vsta\SSIS_ST150\Vsta_I__nDf8P90C4JpTLyyYxcg\packages\Newtonsoft.Json.12.0.3\lib\net45\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="LotReceivedDeserialized.cs" />
    <Compile Include="LotReceivedModelPrivateClass.cs" />
    <Compile Include="LotReceivedModelPublicClass.cs" />
    <Compile Include="LotReceivedModel.cs" />
    <Compile Include="LotReceivedModelV2.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_ec77aea677144767b21d2eda00bc4004")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_ec77aea677144767b21d2eda00bc4004")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Net.Http;
using System.Text;
using Newtonsoft.Json;
using System.Web.Script.Serialization;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Data.SqlClient;
#endregion

namespace ST_ec77aea677144767b21d2eda00bc4004
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            try
            {
                //byte[] emptyBytes = new byte[0];
                Dts.Log("\n\n" + "V2 BEGIN Wool Received: " + DateTime.Now, 0, null);

                //Dts.Log("BEGIN Wool Received: " + DateTime.Now, 0, emptyBytes);

                ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;
                string servicePostUrl = Dts.Variables["$Project::ServicePostUrl"].Value.ToString();

                string apikey = Dts.Variables["$Project::apikey"].Value.ToString();
                DataSet dsLotReceivedResultList = (DataSet)Dts.Variables["User::varLotReceivedResultList"].Value;
                string strRecipientIdPublic = Dts.Variables["$Project::RecipientId"].Value.ToString();
                string strRecipientIdPrivate = Dts.Variables["$Project::RecipientId"].Value.ToString();
                string strRecipientIdInternal = Dts.Variables["$Project::RecipientId"].Value.ToString();
                List<string> lstrRecipientIdPublic = new List<string>();
                List<string> lstrRecipientIdPrivate = new List<string>();
                List<string> lstrRecipientIdInternal = new List<string>();
                //string[] strSplitRecipients = null;                
                List<LotReceivedModelV2.Data> oDataModelList = new List<LotReceivedModelV2.Data>();
                
                if (dsLotReceivedResultList.Tables.Count > 0)
                {
                    if (dsLotReceivedResultList.Tables[0].Rows.Count > 0)
                    {
                        Dts.Log("\n\n" + "V2 Row Count: " + dsLotReceivedResultList.Tables[0].Rows.Count, 0, null);
                        //Dts.Log("Row Count: " + dsLotReceivedResultList.Tables[0].Rows.Count, 0, emptyBytes);

                        //cater for possicble list of muliple Recipients in future without code changes                        
                        //if (!string.IsNullOrEmpty(strRecipientId))
                        //strSplitRecipients = strRecipientId.ToString().Split(',');

                        //if (strSplitRecipients != null)
                        //{
                        //foreach (var recipient in strSplitRecipients)
                        //{
                        //    lRecipients.Add(recipient.Trim());
                        //}
                        //}

                        //quick fix.. too tired RN :(
                        //lRecipients.Add(strRecipientId.Trim());
                        //*

                        lstrRecipientIdPublic.Add(strRecipientIdPublic.Trim());
                        lstrRecipientIdPrivate.Add(strRecipientIdPrivate.Trim());
                        lstrRecipientIdInternal.Add(strRecipientIdInternal.Trim());

                        HttpClient client = new HttpClient();
                        client.BaseAddress = new Uri(servicePostUrl);
                        client.DefaultRequestHeaders.Add("apikey", apikey);
                        
                        LotReceivedModelV2.Data objLotReceivedModelV2Data;
                        string strEvent_timestamp;                     

                        foreach (DataRow dr in dsLotReceivedResultList.Tables[0].Rows)
                        {
                            objLotReceivedModelV2Data = new LotReceivedModelV2.Data
                            {
                                LotNo = dr["Lot No."].ToString(),
                                WoolReceiptDate = dr["Wool Receipt Date"].ToString(),
                                TalmanReferenceNumber = dr["Talman Reference Number"].ToString(),
                                LotNoCategorySeasonNumber = dr["LotNo-Cat-Season"].ToString(),
                                GrossKg = Convert.ToDouble(dr["Gross KG (Lot)"]),
                                LotLocation = dr["Lot Location"].ToString(),
                                LotLocationDate = dr["Lot Location Date"].ToString(),
                                WoolStyle = dr["StyleType"].ToString(),
                                BaleId = dr["Bale ID"].ToString(),
                                NoOfBales = Convert.ToInt32(dr["No. of Bales"]),
                                MulesingStatus = dr["Mulesing Status"].ToString(),
                                RWSStatus = dr["RWS Status"].ToString(),
                                RWSCertificationDetails = dr["RWS Certification Details"].ToString(),
                                ProducerNo = dr["Producer No."].ToString(),
                                StorageOrg = dr["Storage Org"].ToString()
                            };
                            
                            oDataModelList.Add(objLotReceivedModelV2Data);
                        }

                        var grouped = oDataModelList
                       .GroupBy(u => u.WoolReceiptDate)
                       .Select(grp => grp.ToList().OrderByDescending(v => v.WoolReceiptDate))
                       .ToList();

                        string strDocumentId = string.Empty;
                        //string strReference = string.Empty;
                        //List<string> strReference = new List<string>();
                        string strLotNoCategorySeasonNumber = string.Empty;
                        string strRWS = string.Empty;
                        string strProducerNo = string.Empty;
                        string strEvent = "WOOL_RECEIVED";
                        string strAsset = "WOOL_LOT";
                        string strTags = string.Empty;
                        string strPrivateSummary = string.Empty;

                        foreach (var row in grouped)
                        {
                            List<LotReceivedModelV2> objLotReceivedList = new List<LotReceivedModelV2>();                            
                            //List<LotReceivedModelV2> objLotReceivedPrivateList = new List<LotReceivedModelV2>();                            
                            //List<LotReceivedModelV2> objLotReceivedInternalList = new List<LotReceivedModelV2>();
                            
                            foreach (var tn in row)
                            {                           
                                strLotNoCategorySeasonNumber = tn.LotNoCategorySeasonNumber;
                                strRWS = tn.RWSStatus;
                                strProducerNo = tn.ProducerNo;
                                DateTime dtWoolReceiptDate = DateTime.Parse(tn.WoolReceiptDate);
                                string strWoolReceiptDate = dtWoolReceiptDate.ToString("yyyy-MM-dd");
                                strEvent_timestamp = dtWoolReceiptDate.ToString("yyyy-MM-dd hh:mm:ss");
                                strEvent = "WOOL_RECEIVED";
                                strAsset = "WOOL_LOT";
                                strPrivateSummary = string.Empty;

                                strEvent_timestamp = dtWoolReceiptDate.ToString("yyyy-MM-dd hh:mm:ss");

                                string[] strPrivateBaleId = tn.BaleId.ToString().Split(',');
                                List<string> lPrivateBaleId = new List<string>();

                                foreach (var bale in strPrivateBaleId)
                                {
                                    lPrivateBaleId.Add(bale.Trim());
                                }
                                                       
                                LotReceivedModelV2 objLotReceivedModelV2;
                                LotReceivedModelV2.Doc objDocument = new LotReceivedModelV2.Doc();                                
                                LotReceivedModelV2.PublicData objPublicData = new LotReceivedModelV2.PublicData();
                                LotReceivedModelV2.Data objPublicDataSection;   
                                LotReceivedModelV2.Summary objSummaryPublic = new LotReceivedModelV2.Summary();
                               
                                LotReceivedModelV2.PrivateData objPrivateData = new LotReceivedModelV2.PrivateData();
                                LotReceivedModelV2.Data objPrivateDataSection;
                                LotReceivedModelV2.Summary objSummaryPrivate = new LotReceivedModelV2.Summary();
                                
                                //LotReceivedModelV2.InternalData objInternalData = new LotReceivedModelV2.InternalData();
                                //LotReceivedModelV2.Data objInternalDataSection;
                                //LotReceivedModelV2.Summary objSummaryInternal  = new LotReceivedModelV2.Summary();

                                objLotReceivedModelV2 = new LotReceivedModelV2
                                {
                                    document_id = tn.TalmanReferenceNumber.ToString()
                                };

                                List<string> lTags = new List<string>();
                                List<string> lReferences = new List<string>();

                                string[] strBaleId = tn.BaleId.ToString().Split(',');
                                List<string> lBaleId = new List<string>();

                                foreach (var bale in strBaleId)
                                {
                                    lBaleId.Add(bale.Trim());
                                    lTags.Add(bale.Trim());
                                }

                                if (!string.IsNullOrEmpty(strLotNoCategorySeasonNumber))
                                    lTags.Add(tn.LotNoCategorySeasonNumber.ToString());

                                if (!string.IsNullOrEmpty(strRWS))
                                    lTags.Add(tn.RWSStatus.ToString());

                                if (!string.IsNullOrEmpty(strProducerNo))
                                    lTags.Add(tn.ProducerNo.ToString());

                                if (!string.IsNullOrEmpty(strWoolReceiptDate))
                                    lTags.Add(dtWoolReceiptDate.ToString("yyyy-MM-dd"));

                                //if (!string.IsNullOrEmpty(tn.TalmanReferenceNumber))
                                //    lReferencesPrivate.Add(tn.TalmanReferenceNumber.ToString());

                                lReferences.Add(tn.TalmanReferenceNumber); //quick fix.. too tired RN :( //TODO: Added the Reference as the API cannot accept a NULL Reference
                                objDocument = new LotReceivedModelV2.Doc
                                {
                                    asset_type = strAsset,
                                    references = lReferences,
                                    tags = lTags
                                };

                                objLotReceivedModelV2.document = objDocument;
                                //objPublicData.type = "PUBLIC_DATA";
                                //objPrivateData.type = "PRIVATE_DATA";
                                //objPublicData.recipients = lstrRecipientIdPublic;
                                objPrivateData.recipients = lstrRecipientIdPrivate;

                                objPublicDataSection = new LotReceivedModelV2.Data
                                {
                                    WoolReceiptDate = tn.WoolReceiptDate,
                                    NoOfBales = Convert.ToInt32(tn.NoOfBales),
                                    BaleId = tn.BaleId,
                                    LotNo = tn.LotNo,                                    
                                    TalmanReferenceNumber = tn.TalmanReferenceNumber,
                                    LotNoCategorySeasonNumber = tn.LotNoCategorySeasonNumber,
                                    StorageOrg = tn.StorageOrg,
                                    GrossKg = Convert.ToDouble(tn.GrossKg),
                                    WoolStyle = tn.WoolStyle,
                                    RWSStatus = tn.RWSStatus,
                                    MulesingStatus = tn.MulesingStatus   
                                };

                                objPrivateDataSection = new LotReceivedModelV2.Data
                                {
                                    ProducerNo = tn.ProducerNo,
                                    LotLocation = tn.LotLocation,
                                    LotLocationDate = tn.LotLocationDate,
                                    MulesingStatus = tn.MulesingStatus
                                };

                                objPublicData.data = objPublicDataSection;
                                objLotReceivedModelV2.full_event = new LotReceivedModelV2.EventDetail();
                                objPrivateData.data = objPrivateDataSection;                                

                                objSummaryPublic = new LotReceivedModelV2.Summary
                                {
                                    WoolReceiptDate = tn.WoolReceiptDate,
                                    BaleId = lBaleId,
                                    NoOfBales = Convert.ToInt32(tn.NoOfBales),
                                    WoolStyle = tn.WoolStyle,
                                    RWSStatus = tn.RWSStatus
                                };

                                objSummaryPrivate = new LotReceivedModelV2.Summary
                                {
                                    WoolReceiptDate = tn.WoolReceiptDate,
                                    BaleId = lBaleId,
                                    NoOfBales = Convert.ToInt32(tn.NoOfBales),
                                    WoolStyle = tn.WoolStyle,
                                    RWSStatus = tn.RWSStatus
                                };

                                objLotReceivedModelV2.full_event.public_data = objPublicData;
                                objLotReceivedModelV2.full_event.private_data = objPrivateData;
                                objLotReceivedModelV2.full_event.public_data.summary = objSummaryPublic;
                                objLotReceivedModelV2.full_event.private_data.summary = objSummaryPrivate;
                                objLotReceivedModelV2.full_event.event_type = strEvent;
                                                                
                                objLotReceivedList.Add(objLotReceivedModelV2);                           
                            }

                            //Post PUBLIC/PRIVATE/INTERNAL
                            var json = new JavaScriptSerializer().Serialize(objLotReceivedList);
                            json = json.Insert(0, "{" + "\"" + "documents" + "\"" + ":");
                            json = json + "}";

                            Dts.Log("\n\n" + "PRIVATE Array to Post: " + json, 0, null);
                            //Dts.Log("PRIVATE Array to Post: " + jsonPrivate, 0, emptyBytes);                            

                            HttpContent content = new StringContent(json, Encoding.UTF8, "application/json");
                            var varResult = client.PostAsync(servicePostUrl, content).Result;

                            if (varResult.IsSuccessStatusCode)
                            {
                                Dts.Log("\n\n" + "Posted successfully.", 0, null);
                                //Dts.Log("Posted successfully.", 0, emptyBytes);                               

                                string strTalMan = string.Empty;
                                string queryString = string.Empty;

                                using (SqlConnection conn = (SqlConnection)Dts.Connections["PLZ-BRENTONB-L_BRENTONB.SHIFTDX_BC_WOOL_PROD"].AcquireConnection(Dts.Transaction))
                                {
                                    foreach (var r in objLotReceivedList)
                                    {
                                        strTalMan = r.full_event.public_data.data.TalmanReferenceNumber.ToString().Trim();
                                        queryString = "update BC_WoolReceipt set Processed = 1, DateProcessed = GETDATE() where [Talman Reference Number] = '" + strTalMan + "'";

                                        if (conn.State != ConnectionState.Open)
                                        {
                                            conn.Open();
                                        }

                                        SqlCommand cmd = new SqlCommand();
                                        cmd.Connection = conn;
                                        cmd.CommandType = CommandType.Text;
                                        cmd.CommandText = queryString;
                                        cmd.ExecuteNonQuery();

                                    }
                                }

                                Dts.TaskResult = (int)ScriptResults.Success;
                            }
                            else
                            {
                                Dts.Log("\n\n" + "Posted not successful: " + varResult.StatusCode, 0, null);
                                //Dts.Log("Posted not successful: " + varResult.StatusCode, 0, emptyBytes);
                                Dts.TaskResult = (int)ScriptResults.Failure;
                            }
                        }
                    }
                }

                Dts.Log("\n\n" + "END Wool Received: " + DateTime.Now, 0, null);
                //Dts.Log("END Wool Received: " + DateTime.Now, 0, emptyBytes);
            }

            catch (Exception ex)
            {
                //Dts.Log("\n\n" + "Exception: " + ex.ToString(), 0, null);
                Dts.Events.FireError(0, "Lambing Script Task Error: ", ex.Message + "\r" + ex.StackTrace, String.Empty, 0);
                //Dts.Events.FireError(0, "An error occured", ex.Message, String.Empty, 0);
                Dts.TaskResult = (int)ScriptResults.Failure;
            }

            #region
            //try
            //{
            //    //byte[] emptyBytes = new byte[0];
            //    Dts.Log("\n\n" + "BEGIN Wool Received: " + DateTime.Now, 0, null);

            //    //Dts.Log("BEGIN Wool Received: " + DateTime.Now, 0, emptyBytes);

            //    ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;
            //    string servicePostUrl = Dts.Variables["$Project::ServicePostUrl"].Value.ToString();

            //    string apikey = Dts.Variables["$Project::apikey"].Value.ToString();
            //    DataSet dsLotReceivedResultList = (DataSet)Dts.Variables["User::varLotReceivedResultList"].Value;
            //    string strRecipientId = Dts.Variables["$Project::RecipientId"].Value.ToString();
            //    List<string> lRecipients = new List<string>();
            //    //string[] strSplitRecipients = null;
            //    List<LotReceivedModel> oModelList = new System.Collections.Generic.List<LotReceivedModel>();

            //    if (dsLotReceivedResultList.Tables.Count > 0)
            //    {
            //        if (dsLotReceivedResultList.Tables[0].Rows.Count > 0)
            //        {
            //            Dts.Log("\n\n" + "Row Count: " + dsLotReceivedResultList.Tables[0].Rows.Count, 0, null);
            //            //Dts.Log("Row Count: " + dsLotReceivedResultList.Tables[0].Rows.Count, 0, emptyBytes);

            //            //cater for possicble list of muliple Recipients in future without code changes                        
            //            //if (!string.IsNullOrEmpty(strRecipientId))
            //            //strSplitRecipients = strRecipientId.ToString().Split(',');

            //            //if (strSplitRecipients != null)
            //            //{
            //            //foreach (var recipient in strSplitRecipients)
            //            //{
            //            //    lRecipients.Add(recipient.Trim());
            //            //}
            //            //}

            //            //quick fix.. too tired RN :(
            //            lRecipients.Add(strRecipientId.Trim());
            //            //*

            //            HttpClient client = new HttpClient();
            //            client.BaseAddress = new Uri(servicePostUrl);
            //            client.DefaultRequestHeaders.Add("apikey", apikey);

            //            LotReceivedModel objLotReceivedModel;
            //            string strEvent_timestamp;
            //            oModelList = new List<LotReceivedModel>();

            //            foreach (DataRow dr in dsLotReceivedResultList.Tables[0].Rows)
            //            {
            //                objLotReceivedModel = new LotReceivedModel
            //                {
            //                    LotNo = dr["Lot No."].ToString(),
            //                    WoolReceiptDate = dr["Wool Receipt Date"].ToString(),
            //                    TalmanReferenceNumber = dr["Talman Reference Number"].ToString(),
            //                    LotNoCategorySeasonNumber = dr["LotNo-Cat-Season"].ToString(),
            //                    GrossKg = Convert.ToDouble(dr["Gross KG (Lot)"]),
            //                    LotLocation = dr["Lot Location"].ToString(),
            //                    LotLocationDate = dr["Lot Location Date"].ToString(),
            //                    WoolStyle = dr["StyleType"].ToString(),
            //                    BaleId = dr["Bale ID"].ToString(),
            //                    NoOfBales = Convert.ToInt32(dr["No. of Bales"]),
            //                    MulesingStatus = dr["Mulesing Status"].ToString(),
            //                    RWSStatus = dr["RWS Status"].ToString(),
            //                    RWSCertificationDetails = dr["RWS Certification Details"].ToString(),
            //                    ProducerNo = dr["Producer No."].ToString(),
            //                    StorageOrg = dr["Storage Org"].ToString()
            //                };

            //                oModelList.Add(objLotReceivedModel);
            //            }

            //            var grouped = oModelList
            //           .GroupBy(u => u.WoolReceiptDate)
            //           .Select(grp => grp.ToList().OrderByDescending(v => v.WoolReceiptDate))
            //           .ToList();

            //            string strDocumentId = string.Empty;
            //            //string strReference = string.Empty;
            //            //List<string> strReference = new List<string>();
            //            string strLotNoCategorySeasonNumber = string.Empty;
            //            string strRWS = string.Empty;
            //            string strProducerNo = string.Empty;
            //            string strEvent = "WOOL_RECEIVED";
            //            string strAsset = "WOOL_LOT";
            //            string strTags = string.Empty;
            //            string strPrivateSummary = string.Empty;

            //            foreach (var row in grouped)
            //            {
            //                List<LotReceivedModelPrivateClass> objLotReceivedModelPrivateList = new List<LotReceivedModelPrivateClass>();
            //                List<LotReceivedModelPublicClass> objLotReceivedModelPublicList = new List<LotReceivedModelPublicClass>();

            //                foreach (var tn in row)
            //                {
            //                    strDocumentId = tn.TalmanReferenceNumber;
            //                    //strReference = ""; //tn.TalmanReferenceNumber;
            //                    strLotNoCategorySeasonNumber = tn.LotNoCategorySeasonNumber;
            //                    strRWS = tn.RWSStatus;
            //                    strProducerNo = tn.ProducerNo;
            //                    DateTime dtWoolReceiptDate = DateTime.Parse(tn.WoolReceiptDate);
            //                    string strWoolReceiptDate = dtWoolReceiptDate.ToString("yyyy-MM-dd");
            //                    strEvent_timestamp = dtWoolReceiptDate.ToString("yyyy-MM-dd hh:mm:ss");
            //                    strEvent = "WOOL_RECEIVED";
            //                    strAsset = "WOOL_LOT";
            //                    strPrivateSummary = string.Empty;                                

            //                    strEvent_timestamp = dtWoolReceiptDate.ToString("yyyy-MM-dd hh:mm:ss");

            //                    string[] strPrivateBaleId = tn.BaleId.ToString().Split(',');
            //                    List<string> lPrivateBaleId = new List<string>();

            //                    foreach (var bale in strPrivateBaleId)
            //                    {
            //                        lPrivateBaleId.Add(bale.Trim());
            //                    }                                                               

            //                    //Private
            //                    LotReceivedModelPrivateClass objLotReceivedModelPrivateClass;
            //                    LotReceivedModelPrivateClass.Doc documentPrivate = new LotReceivedModelPrivateClass.Doc();
            //                    LotReceivedModelPrivateClass.Summary summaryPrivate = new LotReceivedModelPrivateClass.Summary();

            //                    objLotReceivedModelPrivateClass = new LotReceivedModelPrivateClass
            //                    {
            //                        document_id = tn.TalmanReferenceNumber.ToString()
            //                    };

            //                    List<string> lTagsPrivate = new List<string>();
            //                    List<string> lReferencesPrivate = new List<string>();

            //                    string[] strBaleIdPrivate = tn.BaleId.ToString().Split(',');
            //                    List<string> lBaleIdPrivate = new List<string>();

            //                    foreach (var bale in strBaleIdPrivate)
            //                    {
            //                        lBaleIdPrivate.Add(bale.Trim());
            //                        lTagsPrivate.Add(bale.Trim());
            //                    }

            //                    if (!string.IsNullOrEmpty(strLotNoCategorySeasonNumber))
            //                        lTagsPrivate.Add(tn.LotNoCategorySeasonNumber.ToString());

            //                    if (!string.IsNullOrEmpty(strRWS))
            //                        lTagsPrivate.Add(tn.RWSStatus.ToString());

            //                    if (!string.IsNullOrEmpty(strProducerNo))
            //                        lTagsPrivate.Add(tn.ProducerNo.ToString());

            //                    if (!string.IsNullOrEmpty(strWoolReceiptDate))
            //                        lTagsPrivate.Add(dtWoolReceiptDate.ToString("yyyy-MM-dd"));

            //                    //if (!string.IsNullOrEmpty(tn.TalmanReferenceNumber))
            //                    //    lReferencesPrivate.Add(tn.TalmanReferenceNumber.ToString());

            //                    lReferencesPrivate.Add(""); //quick fix.. too tired RN :(
            //                    documentPrivate = new LotReceivedModelPrivateClass.Doc
            //                    {
            //                        asset_type = strAsset,
            //                        references = lReferencesPrivate,
            //                        tags = lTagsPrivate
            //                    };

            //                    objLotReceivedModelPrivateClass.document = documentPrivate;                                

            //                    summaryPrivate = new LotReceivedModelPrivateClass.Summary
            //                    {
            //                        WoolReceiptDate = tn.WoolReceiptDate.ToString(),
            //                        BaleId = lBaleIdPrivate,
            //                        NoOfBales = Convert.ToInt32(tn.NoOfBales),
            //                        WoolStyle = tn.WoolStyle.ToString(),
            //                        RWSStatus = tn.RWSStatus.ToString()
            //                    };

            //                    objLotReceivedModelPrivateClass.Event = new LotReceivedModelPrivateClass.EventDetail
            //                    {
            //                        event_type = strEvent,
            //                        recipients = lRecipients,
            //                        visibility = "Private",
            //                        event_timestamp = strEvent_timestamp
            //                    };

            //                    objLotReceivedModelPrivateClass.Event.data = new LotReceivedModelPrivateClass.Data
            //                    {
            //                        LotNo = tn.LotNo.ToString(),
            //                        WoolReceiptDate = tn.WoolReceiptDate.ToString(),
            //                        TalmanReferenceNumber = tn.TalmanReferenceNumber.ToString(),
            //                        LotNoCategorySeasonNumber = tn.LotNoCategorySeasonNumber.ToString(),
            //                        GrossKg = Convert.ToDouble(tn.GrossKg),
            //                        LotLocation = tn.LotLocation.ToString(),
            //                        LotLocationDate = tn.LotLocationDate.ToString(),
            //                        WoolStyle = tn.WoolStyle.ToString(),
            //                        BaleId = tn.BaleId.ToString(),
            //                        NoOfBales = Convert.ToInt32(tn.NoOfBales),
            //                        MulesingStatus = tn.MulesingStatus.ToString(),
            //                        RWSStatus = tn.RWSStatus.ToString(),
            //                        RWSCertificationDetails = tn.RWSCertificationDetails.ToString(),
            //                        StorageOrg = tn.StorageOrg.ToString(),
            //                        ProducerNo = tn.ProducerNo.ToString()
            //                    };

            //                    objLotReceivedModelPrivateClass.Event.summary = summaryPrivate;
            //                    objLotReceivedModelPrivateList.Add(objLotReceivedModelPrivateClass);

            //                    //Public
            //                    LotReceivedModelPublicClass objLotReceivedModelPublicClass = new LotReceivedModelPublicClass();
            //                    LotReceivedModelPublicClass.Doc document = new LotReceivedModelPublicClass.Doc();
            //                    LotReceivedModelPublicClass.Summary summary = new LotReceivedModelPublicClass.Summary();

            //                    objLotReceivedModelPublicClass = new LotReceivedModelPublicClass
            //                    {
            //                        document_id = tn.TalmanReferenceNumber.ToString()
            //                    };

            //                    List<string> lTags = new List<string>();
            //                    List<string> lReferences = new List<string>();

            //                    string[] strBaleId = tn.BaleId.ToString().Split(',');
            //                    List<string> lBaleId = new List<string>();

            //                    foreach (var bale in strBaleId)
            //                    {
            //                        lBaleId.Add(bale.Trim());
            //                        lTags.Add(bale.Trim());
            //                    }

            //                    if (!string.IsNullOrEmpty(strLotNoCategorySeasonNumber))
            //                        lTags.Add(tn.LotNoCategorySeasonNumber.ToString());

            //                    if (!string.IsNullOrEmpty(strRWS))
            //                        lTags.Add(tn.RWSStatus.ToString());

            //                    if (!string.IsNullOrEmpty(strProducerNo))
            //                        lTags.Add(tn.ProducerNo.ToString());

            //                    if (!string.IsNullOrEmpty(strWoolReceiptDate))
            //                        lTags.Add(dtWoolReceiptDate.ToString("yyyy-MM-dd"));

            //                    //if (!string.IsNullOrEmpty(tn.TalmanReferenceNumber))
            //                    //lReferences.Add(tn.TalmanReferenceNumber.ToString());

            //                    lReferences.Add(""); //quick fix.. too tired RN :(

            //                    document = new LotReceivedModelPublicClass.Doc
            //                    {
            //                        asset_type = strAsset,
            //                        references = lReferences,
            //                        tags = lTags
            //                    };

            //                    objLotReceivedModelPublicClass.document = document;

            //                    summary = new LotReceivedModelPublicClass.Summary
            //                    {
            //                        WoolReceiptDate = tn.WoolReceiptDate.ToString(),
            //                        BaleId = lBaleId,
            //                        NoOfBales = Convert.ToInt32(tn.NoOfBales),
            //                        WoolStyle = tn.WoolStyle.ToString(),
            //                        RWSStatus = tn.RWSStatus.ToString()
            //                    };

            //                    objLotReceivedModelPublicClass.Event = new LotReceivedModelPublicClass.EventDetail
            //                    {
            //                        event_type = strEvent,
            //                        recipients = lRecipients,
            //                        visibility = "Public",
            //                        event_timestamp = strEvent_timestamp
            //                    };

            //                    objLotReceivedModelPublicClass.Event.data = new LotReceivedModelPublicClass.Data
            //                    {
            //                        LotNo = tn.LotNo.ToString(),
            //                        WoolReceiptDate = tn.WoolReceiptDate.ToString(),
            //                        TalmanReferenceNumber = tn.TalmanReferenceNumber.ToString(),
            //                        LotNoCategorySeasonNumber = tn.LotNoCategorySeasonNumber.ToString(),
            //                        GrossKg = Convert.ToDouble(tn.GrossKg),
            //                        WoolStyle = tn.WoolStyle.ToString(),
            //                        BaleId = tn.BaleId.ToString(),
            //                        NoOfBales = Convert.ToInt32(tn.NoOfBales),
            //                        MulesingStatus = tn.MulesingStatus.ToString(),
            //                        RWSStatus = tn.RWSStatus.ToString(),
            //                        StorageOrg = tn.StorageOrg.ToString()
            //                    };

            //                    objLotReceivedModelPublicClass.Event.summary = summary;
            //                    objLotReceivedModelPublicList.Add(objLotReceivedModelPublicClass);
            //                }

            //                //Post Batch of Private
            //                var jsonPrivate = new JavaScriptSerializer().Serialize(objLotReceivedModelPrivateList);
            //                jsonPrivate = jsonPrivate.Insert(0, "{" + "\"" + "events" + "\"" + ":");
            //                jsonPrivate = jsonPrivate + "}";
            //                jsonPrivate = jsonPrivate.Replace("Event", "event");

            //                Dts.Log("\n\n" + "PRIVATE Array to Post: " + jsonPrivate, 0, null);
            //                //Dts.Log("PRIVATE Array to Post: " + jsonPrivate, 0, emptyBytes);

            //                //HttpContent content = new StringContent(jsonPrivate, Encoding.UTF8, "application/json");
            //                //var varResult = client.PostAsync(servicePostUrl, content).Result;

            //                //if (varResult.IsSuccessStatusCode)
            //                //{
            //                //    Dts.Log("\n\n" + "Posted successfully.", 0, null);
            //                //    //Dts.Log("Posted successfully.", 0, emptyBytes);
            //                //    Dts.TaskResult = (int)ScriptResults.Success;
            //                //}
            //                //else
            //                //{
            //                //    Dts.Log("\n\n" + "Posted not successful: " + varResult.StatusCode, 0, null);
            //                //    //Dts.Log("Posted not successful: " + varResult.StatusCode, 0, emptyBytes);
            //                //    Dts.TaskResult = (int)ScriptResults.Failure;
            //                //}

            //                //Post Batch of Public
            //                var jsonPublic = new JavaScriptSerializer().Serialize(objLotReceivedModelPublicList);
            //                jsonPublic = jsonPublic.Insert(0, "{" + "\"" + "events" + "\"" + ":");
            //                jsonPublic = jsonPublic + "}";
            //                jsonPublic = jsonPublic.Replace("Event", "event");

            //                Dts.Log("\n\n" + "PUBLIC Array to Post: " + jsonPublic, 0, null);
            //                //Dts.Log("PUBLIC Array to Post: " + jsonPublic, 0, emptyBytes);

            //                //HttpContent contentPublic = new StringContent(jsonPublic, Encoding.UTF8, "application/json");
            //                //var varResultPublic = client.PostAsync(servicePostUrl, contentPublic).Result;

            //                //if (varResultPublic.IsSuccessStatusCode)
            //                //{
            //                //    Dts.Log("\n\n" + "Posted successfully.", 0, null);
            //                //    //Dts.Log("Posted successfully.", 0, emptyBytes);
            //                //    Dts.TaskResult = (int)ScriptResults.Success;
            //                //}
            //                //else
            //                //{
            //                //    Dts.Log("\n\n" + "Posted not successful: " + varResultPublic.StatusCode, 0, null);
            //                //    //Dts.Log("Posted not successful: " + varResultPublic.StatusCode, 0, emptyBytes);
            //                //    Dts.TaskResult = (int)ScriptResults.Failure;
            //                //}
            //            }
            //        }
            //    }

            //    Dts.Log("\n\n" + "END Wool Received: " + DateTime.Now, 0, null);
            //    //Dts.Log("END Wool Received: " + DateTime.Now, 0, emptyBytes);
            //}

            //catch (Exception ex)
            //{
            //    //Dts.Log("\n\n" + "Exception: " + ex.ToString(), 0, null);
            //    Dts.Events.FireError(0, "Lambing Script Task Error: ", ex.Message + "\r" + ex.StackTrace, String.Empty, 0);
            //    //Dts.Events.FireError(0, "An error occured", ex.Message, String.Empty, 0);
            //    Dts.TaskResult = (int)ScriptResults.Failure;
            //}

            #endregion
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ec77aea677144767b21d2eda00bc4004.Properties.Settings.get_Default():ST_ec77aea677144767b21d2eda00bc4004.Properties.Sett" +
    "ings")]

namespace ST_ec77aea677144767b21d2eda00bc4004.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="LotReceivedModelPrivateClass.cs"
            Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ST_ec77aea677144767b21d2eda00bc4004
{
    public class LotReceivedModelPrivateClass
    {
        public LotReceivedModelPrivateClass()
        {

        }

        public string document_id { get; set; }
        public Doc document { get; set; }
        public EventDetail Event { get; set; }
        //public SummaryDetails Summary { get; set; }

        public class Doc
        {
            public string asset_type { get; set; }
            public List<string> references { get; set; }
            public List<string> tags { get; set; }
        }

        public class EventDetail
        {
            public string event_type { get; set; }
            //public string recipients { get; set; }
            public List<string> recipients { get; set; }
            public string visibility { get; set; }
            public string event_timestamp { get; set; }
            public Data data { get; set; }
            public Summary summary { get; set; }
        }

        public class Data
        {
            public string LotNo { get; set; }
            public string WoolReceiptDate { get; set; }
            public string TalmanReferenceNumber { get; set; }
            public string LotNoCategorySeasonNumber { get; set; }
            public Nullable<double> GrossKg { get; set; }
            public string LotLocation { get; set; }
            public string LotLocationDate { get; set; }
            public string WoolStyle { get; set; }
            public string BaleId { get; set; }
            public Nullable<int> NoOfBales { get; set; }
            public string MulesingStatus { get; set; }
            public string RWSStatus { get; set; }
            public string RWSCertificationDetails { get; set; }
            public string StorageOrg { get; set; }
            public string ProducerNo { get; set; }
        }

        public class Summary
        {
            public string WoolReceiptDate { get; set; }
            public Nullable<int> NoOfBales { get; set; }
            public List<string> BaleId { get; set; }
            public string WoolStyle { get; set; }
            public string RWSStatus { get; set; }
        }
    }
}

    /*
    {
        "document_id": "7888604",
        "document": {
            "asset_type": "WOOL_LOT",
            "references": [
                "7888604"
            ],
            "tags": [
                "103-P32-19",
             "Not Certified",
             "BKBSA",
             "2020-06-17"
            ]
        },
        "event": {
            "event_type": "Private-Wool Received",
            "recipients": [
                ""
            ],
            "visibility": "Private",
            "data": {
                "LotNo":"103",
             "WoolReceiptDate":"17/06/2020 12:00:00 AM",
             "TalmanReferenceNumber":"7888604",
             "LotNoCategorySeasonNumber":"103-P32-19",
             "GrossKg":1064.3,
             "LotLocation":"",
             "LotLocationDate":"",
             "WoolStyle":"MB5",
             "BaleId":" 12661737, 12661738, 12661739, 12661740, 12662349, 12662350, 12662351",
             "NoOfBales":7,
             "MulesingStatus":"Non-Mulesed",
             "RWSStatus":"Not Certified",
             "RWSCertificationDetails":"N/A",
             "ProducerNo":"BKBSA",
             "StorageOrg":"BKBSA"
            },
            "summary": {
                "WoolReceivedDate": "2019-10-10",
                "BaleID": [
                    "12661737",
                    "12661738",
                    "12661739",
                    "12661740",
                    "12662349",
                    "12662350",
                    "12662351"
                ],
                "NoOfBales": "7",
                "WoolGrade": "MB5",
                "RWSStatus": "Not Certified"
            }
        }
    }



    */]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ec77aea677144767b21d2eda00bc4004.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ec77aea677144767b21d2eda00bc4004.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ec77aea677144767b21d2eda00bc4004.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_ec77aea677144767b21d2eda00bc4004.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_ec77aea677144767b21d2eda00bc4004.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="LotReceivedModelV2.cs"
            Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ST_ec77aea677144767b21d2eda00bc4004
{
    public class LotReceivedModelV2
    {
        public LotReceivedModelV2()
        {

        }

        public string document_id { get; set; }
        public Doc document { get; set; }
        public EventDetail full_event { get; set; }

        public class Doc
        {
            public string asset_type { get; set; }
            public List<string> references { get; set; }
            public List<string> tags { get; set; }
        }

        public class EventDetail
        {
            public string event_type { get; set; }
            public PublicData public_data { get; set; }
            public PrivateData private_data { get; set; }
            public InternalData internal_data { get; set; }
        }

        public class PublicData
        {
            public Data data { get; set; }
            public Summary summary { get; set; }
        }

        public class PrivateData
        {
            public List<string> recipients { get; set; }
            public Data data { get; set; }
            public Summary summary { get; set; }
        }
            
        public class InternalData
        {
            public Data data { get; set; }
            public Summary summary { get; set; }
        }

        public class Data
        {
            public string LotNo { get; set; }
            public string WoolReceiptDate { get; set; }
            public string TalmanReferenceNumber { get; set; }
            public string LotNoCategorySeasonNumber { get; set; }
            public Nullable<double> GrossKg { get; set; }
            public string LotLocation { get; set; }
            public string LotLocationDate { get; set; }
            public string WoolStyle { get; set; }
            public string BaleId { get; set; }
            public Nullable<int> NoOfBales { get; set; }
            public string MulesingStatus { get; set; }
            public string RWSStatus { get; set; }
            public string RWSCertificationDetails { get; set; }
            public string StorageOrg { get; set; }
            public string ProducerNo { get; set; }
        }

        public class Summary
        {
            public string WoolReceiptDate { get; set; }
            public Nullable<int> NoOfBales { get; set; }
            public List<string> BaleId { get; set; }
            public string WoolStyle { get; set; }
            public string RWSStatus { get; set; }
        }

        //public string document_id { get; set; }
        //public Doc document { get; set; }
        //public EventDetail events { get; set; }

        //public class Doc
        //{
        //    public string asset_type { get; set; }
        //    public List<string> references { get; set; }
        //    public List<string> tags { get; set; }
        //}

        //public class EventDetail
        //{
        //    public string event_type { get; set; }
        //    public PublicData public_data { get; set; }
        //    public PrivateData private_data { get; set; }
        //    //public InternalData internal_data { get; set; }
        //}

        //public class PublicData
        //{
        //    public string type { get; set; }
        //    public List<string> recipients { get; set; }
        //    public Data data { get; set; }
        //    public Summary summary { get; set; }
        //}

        //public class PrivateData
        //{
        //    public string type { get; set; }
        //    public List<string> recipients { get; set; }
        //    public Data data { get; set; }
        //    public Summary summary { get; set; }
        //}

        ////public class InternalData
        ////{
        ////    public string type { get; set; }
        ////    public List<string> recipients { get; set; }
        ////    public Data data { get; set; }
        ////}

        //public class Data
        //{
        //    public string LotNo { get; set; }
        //    public string WoolReceiptDate { get; set; }
        //    public string TalmanReferenceNumber { get; set; }
        //    public string LotNoCategorySeasonNumber { get; set; }
        //    public Nullable<double> GrossKg { get; set; }
        //    public string LotLocation { get; set; }
        //    public string LotLocationDate { get; set; }
        //    public string WoolStyle { get; set; }
        //    public string BaleId { get; set; }
        //    public Nullable<int> NoOfBales { get; set; }
        //    public string MulesingStatus { get; set; }
        //    public string RWSStatus { get; set; }
        //    public string RWSCertificationDetails { get; set; }
        //    public string StorageOrg { get; set; }
        //    public string ProducerNo { get; set; }
        //}

        //public class Summary
        //{
        //    public string WoolReceiptDate { get; set; }
        //    public Nullable<int> NoOfBales { get; set; }
        //    public List<string> BaleId { get; set; }
        //    public string WoolStyle { get; set; }
        //    public string RWSStatus { get; set; }
        //}
    }
}]]></ProjectItem>
          <ProjectItem
            Name="LotReceivedModel.cs"
            Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ST_ec77aea677144767b21d2eda00bc4004
{
    public class LotReceivedModel
    {
        public LotReceivedModel()            
        {

        }

        //public int Id { get; set; }
        public string LotNo { get; set; }
        public string WoolReceiptDate { get; set; }
        public string TalmanReferenceNumber { get; set; }
        public string LotNoCategorySeasonNumber { get; set; }
        public Nullable<double> GrossKg { get; set; }
        //public string GrossKg { get; set; }
        public string LotLocation { get; set; }
        public string LotLocationDate { get; set; }
        public string WoolStyle { get; set; }
        public string BaleId { get; set; }
        public Nullable<int> NoOfBales { get; set; }
        public string MulesingStatus { get; set; }
        public string RWSStatus { get; set; }
        public string RWSCertificationDetails { get; set; }
        public string ProducerNo { get; set; }
        public string StorageOrg { get; set; }


        /*PRD VIEW

        Lot No.
        Wool Receipt Date
        Talman Reference Number
        LotNo-Cat-Season
        Gross KG (Lot)
        Lot Location 
        Lot Location Date
        StyleType
        Bale ID
        No. of Bales        
        Mulesing Status
        RWS
        RWS Comments
        Producer No.
        Storage Org


        */
    }
}]]></ProjectItem>
          <ProjectItem
            Name="LotReceivedModelPublicClass.cs"
            Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ST_ec77aea677144767b21d2eda00bc4004
{
    public class LotReceivedModelPublicClass
    {
        public LotReceivedModelPublicClass()
        {

        }

        public string document_id { get; set; }
        public Doc document { get; set; }
        public EventDetail Event { get; set; }
        //public SummaryDetails Summary { get; set; }

        public class Doc
        {
            public string asset_type { get; set; }
            public List<string> references { get; set; }
            public List<string> tags { get; set; }
        }

        public class EventDetail
        {
            public string event_type { get; set; }
            //public string recipients { get; set; }
            public List<string> recipients { get; set; }
            public string visibility { get; set; }
            public string event_timestamp { get; set; }
            public Data data { get; set; }
            public Summary summary { get; set; }
        }

        public class Data
        {
            public string LotNo { get; set; }
            public string WoolReceiptDate { get; set; }
            public string TalmanReferenceNumber { get; set; }
            public string LotNoCategorySeasonNumber { get; set; }
            public Nullable<double> GrossKg { get; set; }
            public string WoolStyle { get; set; }
            public string BaleId { get; set; }
            public Nullable<int> NoOfBales { get; set; }
            public string MulesingStatus { get; set; }
            public string RWSStatus { get; set; }
            public string StorageOrg { get; set; }
            //public Summary Summary { get; set; }
        }

        public class Summary
        {
            public string WoolReceiptDate { get; set; }
            public Nullable<int> NoOfBales { get; set; }
            public List<string> BaleId { get; set; }
            public string WoolStyle { get; set; }
            public string RWSStatus { get; set; }
        }
    }
}

    /*
    {
        "document_id": "7888604",
        "document": {
            "asset_type": "WOOL_LOT",
            "references": [
                "7888604"
            ],
            "tags": [
                "103-P32-19",
             "Not Certified",
             "BKBSA",
             "2020-06-17"
            ]
        },
        "event": {
            "event_type": "Private-Wool Received",
            "recipients": [
                ""
            ],
            "visibility": "Private",
            "data": {
                "LotNo":"103",
             "WoolReceiptDate":"17/06/2020 12:00:00 AM",
             "TalmanReferenceNumber":"7888604",
             "LotNoCategorySeasonNumber":"103-P32-19",
             "GrossKg":1064.3,
             "LotLocation":"",
             "LotLocationDate":"",
             "WoolStyle":"MB5",
             "BaleId":" 12661737, 12661738, 12661739, 12661740, 12662349, 12662350, 12662351",
             "NoOfBales":7,
             "MulesingStatus":"Non-Mulesed",
             "RWSStatus":"Not Certified",
             "RWSCertificationDetails":"N/A",
             "ProducerNo":"BKBSA",
             "StorageOrg":"BKBSA"
            },
            "summary": {
                "WoolReceivedDate": "2019-10-10",
                "BaleID": [
                    "12661737",
                    "12661738",
                    "12661739",
                    "12661740",
                    "12662349",
                    "12662350",
                    "12662351"
                ],
                "NoOfBales": "7",
                "WoolGrade": "MB5",
                "RWSStatus": "Not Certified"
            }
        }
    }



    */]]></ProjectItem>
          <BinaryItem
            Name="ST_ec77aea677144767b21d2eda00bc4004.dll">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
JREUcq8CAHBvKwAACm8aAAAKb/EAAAYlERRyyQIAcG8rAAAKbxoAAApv7wAABhMMEQkRDG8wAAAK
ERNvMQAACjpz/v//3hURE3UYAAABExURFSwHERVvMgAACtwRCX54AAAEJS0XJn53AAAE/gYAAQAG
czMAAAolgHgAAAQoAQAAK356AAAEJS0XJn53AAAE/gYBAQAGczUAAAolgHoAAAQoAgAAKygDAAAr
fjgAAAomfjgAAAoTDX44AAAKEw5+OAAAChMPcuECAHATEHL9AgBwExF+OAAACiZ+OAAACiZvOQAA
ChMWOPMFAAASFig6AAAKczsAAAoTF288AAAKExs4GQQAABEbbz0AAAoTHBEcb9oAAAYTDREcb+oA
AAYTDhEcb/AAAAYTDxEcb9YAAAYoPgAAChMdEh1yDwMAcCg/AAAKEx4SHXIlAwBwKD8AAAomcuEC
AHATEHL9AgBwExF+OAAACiYSHXIlAwBwKD8AAAomERxv5AAABm8aAAAKF407AAABJRYfLJ1vQAAA
CnMbAAAKEx8TKxYTEisbESsREpoTLBEfESxvIgAACm8jAAAKERIXWBMSERIRK45pMt1zuQAABhMh
c8cAAAYTInP9AAAGEyRzzgAABhMlc/0AAAYTJ3MvAAAGJREcb9gAAAZvGgAACm8xAAAGEyBzGwAA
ChMocxsAAAoTKREcb+QAAAZvGgAACheNOwAAASUWHyydb0AAAApzGwAAChMqEysWExIrKRErERKa
Ey0RKhEtbyIAAApvIwAAChEoES1vIgAACm8jAAAKERIXWBMSERIRK45pMs8RDShBAAAKLRMRKBEc
b9oAAAZvGgAACm8jAAAKEQ4oQQAACi0TESgRHG/qAAAGbxoAAApvIwAAChEPKEEAAAotExEoERxv
8AAABm8aAAAKbyMAAAoRHihBAAAKLRMRKBIdcg8DAHAoPwAACm8jAAAKESkRHG/YAAAGbyMAAApz
uQAABiUREW+0AAAGJREpb7YAAAYlEShvuAAABhMhESARIW8zAAAGESURB2/JAAAGc/IAAAYlERxv
1gAABm/XAAAGJREcb+YAAAaMBAAAGyguAAAKcy8AAApv5wAABiURHG/kAAAGb+UAAAYlERxv1AAA
Bm/VAAAGJREcb9gAAAZv2QAABiURHG/aAAAGb9sAAAYlERxv7gAABm/vAAAGJREcb9wAAAaMAwAA
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
PwAABCoiAgN9PwAABCoeAntAAAAEKiICA31AAAAEKh4Ce0EAAAQqIgIDfUEAAAQqHgJ7QgAABCoi
AgN9QgAABCoeAntDAAAEKiICA31DAAAEKh4Ce0QAAAQqIgIDfUQAAAQqHgJ7RQAABCoiAgN9RQAA
BCoeAntGAAAEKiICA31GAAAEKh4Ce0cAAAQqIgIDfUcAAAQqHgJ7SAAABCoiAgN9SAAABCoeAntJ
AAAEKiICA31JAAAEKh4Ce0oAAAQqIgIDfUoAAAQqHgJ7SwAABCoiAgN9SwAABCoeAntMAAAEKiIC
A31MAAAEKh4Ce00AAAQqIgIDfU0AAAQqHgJ7TgAABCoiAgN9TgAABCoeAntPAAAEKiICA31PAAAE
Kh4Ce1AAAAQqIgIDfVAAAAQqHgJ7UQAABCoiAgN9UQAABCoeAntSAAAEKiICA31SAAAEKh4Ce1MA
AAQqIgIDfVMAAAQqHgJ7VAAABCoiAgN9VAAABCoeAntVAAAEKiICA31VAAAEKh4Ce1YAAAQqIgID
fVYAAAQqHgJ7VwAABCoiAgN9VwAABCoeAntYAAAEKiICA31YAAAEKh4Ce1kAAAQqIgIDfVkAAAQq
HgJ7WgAABCoiAgN9WgAABCoeAntbAAAEKiICA31bAAAEKh4Ce1wAAAQqIgIDfVwAAAQqHgJ7XQAA
BCoiAgN9XQAABCoeAnteAAAEKiICA31eAAAEKh4Ce18AAAQqIgIDfV8AAAQqHgJ7YAAABCoiAgN9
YAAABCoeAnthAAAEKiICA31hAAAEKh4Ce2IAAAQqIgIDfWIAAAQqHgJ7YwAABCoiAgN9YwAABCoe
AntkAAAEKiICA31kAAAEKh4Ce2UAAAQqIgIDfWUAAAQqHgJ7ZgAABCoiAgN9ZgAABCoeAntnAAAE
KiICA31nAAAEKh4Ce2gAAAQqIgIDfWgAAAQqHgJ7aQAABCoiAgN9aQAABCoeAntqAAAEKiICA31q
AAAEKh4Ce2sAAAQqIgIDfWsAAAQqHgJ7bAAABCoiAgN9bAAABCoeAnttAAAEKiICA31tAAAEKh4C
e24AAAQqIgIDfW4AAAQqHgJ7bwAABCoiAgN9bwAABCoeAntwAAAEKiICA31wAAAEKh4Ce3EAAAQq
IgIDfXEAAAQqHgJ7cgAABCoiAgN9cgAABCoeAntzAAAEKiICA31zAAAEKi5z/wAABoB3AAAEKh4D
b9YAAAYqrgMoBAAAK355AAAEJS0XJn53AAAE/gYCAQAGczMAAAolgHkAAAQoBQAAKyoAAEJTSkIB
AAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAJQrAAAjfgAAACwAANASAAAjU3RyaW5ncwAA
AADQPgAALAYAACNVUwD8RAAAEAAAACNHVUlEAAAADEUAANAFAAAjQmxvYgAAAAAAAAACAAABVx2i
CQkLAAAA+gEzABYAAAEAAABKAAAAGgAAAHoAAAACAQAAdAAAAGYAAAACAAAAYQEAAAEAAAAVAAAA
cwAAAOQAAAANAAAAAQAAAAgAAAABAAAAEQAAAAUAAAAAACgLAQAAAAAABgBYCUgOBgDnCUgOBgCk
CDUODwDaDgAABgDRCBUMBgA7CRUMBgAcCRUMBgDOCRUMBgB4CRUMBgCRCRUMBgDoCBUMBgADCVIK
BgAjEW4LBgBsCEgOBgBwANEBBgAtAG4LCgCsCboKCgCQB7oKDgA8ERwBBgDKBm4LEgCGERANBgAO
Ds0PDgBUEhwBBgB1Bm4LPwAdDgAAFgBGACANEgDFERANEgBDBhANBgBiANEBDgB7DHARGgAQBjER
BgCJDG4LBgB6C24LBgCoAG4LFgCvACANBgCHCDUOBgClDYYOBgDYDNALGgBHCAYLGgC4CAYLGgDH
B7sLCgD0CroKBgBuCm4LGgDHDTERGgADBzERHgBDD9MGHgBhBtMGDgAnDBwBDgCsBxwBDgBXBhwB
DgA7DBwBBgB5AG4LGgCXCm4LEgAUEPAPEgAIEPAPBgAUEm4LFgBqBiANBgA4ANEBBgAsDW4LIgDv
DeULBgBJCiwSEgC3ERANBgBbAGgPHgDkD9MGHgC1DdMGDgBcDJMMDgBcCBwBDgDXBXARDgDNBZMM
DgD3BhwBCgDbDboKBgATB24LBgCKBm4LBgBoEhUMAAAAAOwAAAAAAAEAAQABABAAFAK7ADUAAQAB
AAEAEABdELsANQABAAIAAQAQAEEQuwA1AAQACQABABAA4wq7ADUABwAQAAEAEAB/ALsANQAWAC8A
AQAQAJALuwBJABkANgAAABAAjQ7pDjUAGQA4AAABEABfD+kOpQAbADwAAgAQAPYBAAA1ABwAPwAC
ABAAHAsAADUAHwBGAAIAEABHAQAANQAlAFMAAgAQAHESAAA1ADQAcgACABAA9gEAADUAOQB9AAIA
EAAcCwAANQA8AIQAAgAQAEcBAAA1AEIAkQACABAAcRIAADUATQCoAAIAEAD2AQAANQBSALMAAgAQ
ABwLAAA1AFUAugACABAAKAEAADUAWQDDAAIAEAAzAQAANQBbAMgAAgAQAD8BAAA1AF4AzwACABAA
RwEAADUAYADUAAIAEABxEgAANQBvAPMAAwEAAJoQAACFAHQA/gADIRAAzQEAADUAdwD+AAEA1ALM
AQEASwUDAwEAZQUHAwEA1ALMAQEASwULAwEAZQUPAwEA9APMAQEAZQPMAQEALATMAQEAUwTMAQEA
hgMTAwEAuwPMAQEARAPMAQEA8QLMAQEAvALMAQEAmgQaAwEAKwXMAQEAEAXMAQEAywTMAQEA2APM
AQEAnwPMAQEA1ALMAQEASwUhAwEAfAUlAxEAfwspAxEAgAcuAxEA8QUzAwEADAPMAQEAfgQ3AwEA
tQQ3AwEAKAPMAQEA9AQ3AwEAsQXMAQEACwTMAQEATAI+AwEAmAVCAwEA9APMAQEAZQPMAQEALATM
AQEAUwTMAQEAhgMTAwEAuwPMAQEARAPMAQEA8QLMAQEAvALMAQEAmgQaAwEAKwXMAQEAEAXMAQEA
ywTMAQEAnwPMAQEA2APMAQEAZQPMAQEAmgQaAwEAvAI3AwEA8QLMAQEAEAXMAQEADAPMAQEAfgQ3
AwEAtQQ3AwEAKAPMAQEA9AQ3AwEAsQXMAQEACwTMAQEATAJGAwEAmAVKAwEA9APMAQEAZQPMAQEA
LATMAQEAUwTMAQEAhgMTAwEA8QLMAQEAvALMAQEAmgQaAwEAKwXMAQEAEAXMAQEAnwPMAQEAZQPM
AQEAmgQaAwEAvAI3AwEA8QLMAQEAEAXMAQEADAPMAQEAfgQ3AwEAtQQ3AwEAKAPMAQEAYgJOAwEA
fwJSAwEAnQJWAwEATAJaAwEAmAVeAwEA9AQ3AwEATAJaAwEAmAVeAwEATAJaAwEAmAVeAwEA9APM
AQEAZQPMAQEALATMAQEAUwTMAQEAhgMTAwEAuwPMAQEARAPMAQEA8QLMAQEAvALMAQEAmgQaAwEA
KwXMAQEAEAXMAQEAywTMAQEAnwPMAQEA2APMAQEAZQPMAQEAmgQaAwEAvAI3AwEA8QLMAQEAEAXM
AQYGFAFiA1aAehBlA1aAYAdlAzYA6ABpAxYAAQBtAxYAkgBtAxYAFwB3A1AgAAAAAIYYKA4GAAEA
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
AQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAP
CgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAA
AQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAP
CgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAA
AQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAP
CgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAA
AQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAP
CgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAA
AQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAP
CgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAA
AQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAPCgAAAQAP
CgAAAQBIEgAAAQAMDQAAAQBKEgkAKA4BABEAKA4GABkAKA4KACkAKA4QADEAKA4QADkAKA4QAEEA
KA4QAEkAKA4QAFEAKA4QAFkAKA4QAGEAKA4QAHEAKA4GAIkAKA4GACEBKA4GAEEBKA4VAGkAKA4G
AJEAkhClAKEATBKrAKEAbAqwAFkBHBG0AFEBdQq6AGEBUAvCAFEBPw/JAHEBZQvPAHkBBQrWAGkA
bAqwAAwAKA4GABQAKA4GAJkANA/nAIkBAxLtAIEBZQvxAJEBExH4AKEBbAqwAFkBdQuwAAwAEAL+
AKkAKA4GAKkBKA4QAKkAghAEAakAJxALAbkBEAIRAYkBGg4XAbEAqxHWALkAZQscAcEBgQYhARwA
KA7+AMEBdwAsASQAKA7+ABQAEAL+ALEAIxI3AcEA3wcGACwAKA5EAckBXBJKATQAKA5EAckBKhGG
AckBHBKyAVkBxxLMATwAGg7aAUQAqxHuAUwAKA4GAFQAGg4CAlwAqxHuAaEA5wcSAqEAbAoYAlkB
RBEdAlkBvxIkAkwAEAL+AOEBKA4GAOEBFQopAlkBDRIuAukB3wA0AvEBKA46AqkA7AFDAmQAVhHu
AeEAHwY3AVEB4A9YAgECZQteAlEBBQzWAAkCaQxlAkwAGg7aAWwAqxHuAVkBHBFxAhECPQh4AhEC
iwsGACECKA4GACECTQx+AikC8waEAikCOBIQACkCkRLtAGwAIxI3AVEBYREBAOEAAQaLAkQAIxI3
AVEBxhCQAgEBNwawAAEB4gWwADkCBA6WApEAKA4GAEECnAafAkECZBKoAikBKA6uAkkBKA4GAMkB
Nwq7AggA1AH5AggA2AH+AiEAYwD+Ai4ACwAPBS4AEwAYBS4AGwA3BS4AIwBABS4AKwBpBS4AMwBp
BS4AOwBpBS4AQwBABS4ASwBvBS4AUwBpBS4AWwCGBUEAYwD+AmAAYwD+AmEAYwD+AoAAYwD+AoEA
YwD+AqAAYwD+AqEAYwD+AsAAYwD+AsEAYwD+AuAAYwD+AuEAYwD+AuMAawD+AgABYwD+AgEBYwD+
AgMBcwD+AiEBYwD+AkABYwD+AkEBYwD+AmABYwD+AmEBYwD+AoABYwD+AoEBYwD+AqABYwD+AqEB
YwD+AsABYwD+AsEBYwD+AuABYwD+AuEBYwD+AgECYwD+AiACYwD+AiECYwD+AkACYwD+AkECYwD+
AmACYwD+AmECYwD+AoACYwD+AoECYwD+AqACYwD+AqECYwD+AsACYwD+AsECYwD+AuACYwD+AuEC
YwD+AgADYwD+AgEDYwD+AiADYwD+AikDewA3BUADYwD+AkMDYwD+AkkDewA3BWADYwD+AmEDYwD+
AoADYwD+AoEDYwD+AqADYwD+AqEDYwD+AsADYwD+AsEDYwD+AuADYwD+AuEDYwD+AgAEYwD+AgEE
YwD+AiAEYwD+AiEEYwD+AkAEYwD+AkEEYwD+AmAEYwD+AmEEYwD+AoAEYwD+AoEEYwD+AqAEYwD+
AqEEYwD+AsAEYwD+AsEEYwD+AuAEYwD+AuEEYwD+AgAFYwD+AgEFYwD+AiAFYwD+AiEFYwD+AkAF
YwD+AkEFYwD+AmAFYwD+AmEFYwD+AoAFYwD+AoEFYwD+AqAFYwD+AqEFYwD+AsAFYwD+AsEFYwD+
AuEFYwD+AgAGYwD+AgEGYwD+AiAGYwD+AiEGYwD+AkAGYwD+AkEGYwD+AmAGYwD+AmEGYwD+AoAG
YwD+AoEGYwD+AqAGYwD+AqEGYwD+AsEGYwD+AuEGYwD+AgEHYwD+AiEHYwD+AkEHYwD+AmEHYwD+
AoEHYwD+AqEHYwD+AsEHYwD+AuAHYwD+AuEHYwD+AgAIYwD+AgEIYwD+AiAIYwD+AiEIYwD+AkAI
YwD+AkEIYwD+AmAIYwD+AmEIYwD+AoAIYwD+AoEIYwD+AqEIYwD+AsAIYwD+AsEIYwD+AuAIYwD+
AuEIYwD+AgAJYwD+AgEJYwD+AiAJYwD+AiEJYwD+AkAJYwD+AkEJYwD+AmAJYwD+AmEJYwD+AoAJ
YwD+AoEJYwD+AqAJYwD+AqEJYwD+AsAJYwD+AsEJYwD+AuAJYwD+AuEJYwD+AgAKYwD+AgEKYwD+
AiAKYwD+AiEKYwD+AkEKYwD+AmAKYwD+AmEKYwD+AoAKYwD+AoEKYwD+AqAKYwD+AqEKYwD+AsAK
YwD+AsEKYwD+AuAKYwD+AuEKYwD+AgALYwD+AgELYwD+AiALYwD+AiELYwD+AkALYwD+AkELYwD+
AmALYwD+AmELYwD+AoALYwD+AoELYwD+AqALYwD+AqELYwD+AsALYwD+AsELYwD+AuALYwD+AuEL
YwD+AgAMYwD+AgEMYwD+AiAMYwD+AiEMYwD+AkAMYwD+AkEMYwD+AmAMYwD+AmEMYwD+AoAMYwD+
AoEMYwD+AqAMYwD+AqEMYwD+AsAMYwD+AsEMYwD+AuAMYwD+AuEMYwD+AgANYwD+AgENYwD+AiAN
YwD+AiENYwD+AkANYwD+AkENYwD+AmANYwD+AmENYwD+AoANYwD+AoENYwD+AqANYwD+AqENYwD+
AsANYwD+AsENYwD+AuANYwD+AuENYwD+AgAOYwD+AgEOYwD+AiEOYwD+AkAOYwD+AkEOYwD+AmAO
YwD+AmEOYwD+AoAOYwD+AqAOYwD+AsAOYwD+AuAOYwD+AgAPYwD+AiAPYwD+AkAPYwD+AmAPYwD+
AqAPYwD+AsAPYwD+AuAPYwD+AgAQYwD+AiAQYwD+AkAQYwD+AoAQYwD+AqAQYwD+AsAQYwD+AuAQ
YwD+AgARYwD+AiARYwD+AkARYwD+AmARYwD+AoARYwD+AqARYwD+AsARYwD+AuARYwD+AiASYwD+
AkASYwD+AmASYwD+AoASYwD+AqASYwD+AsASYwD+AuASYwD+AgATYwD+AiATYwD+AkATYwD+AmAT
YwD+AoATYwD+AqATYwD+AsATYwD+AuATYwD+AgAUYwD+AiAUYwD+AkAUYwD+AmAUYwD+AoAUYwD+
AqAUYwD+AsAUYwD+AgAVYwD+AiAVYwD+AkAVYwD+AmAVYwD+AoAVYwD+AqAVYwD+AsAVYwD+AuAV
YwD+AgAWYwD+AiAWYwD+AmAWYwD+AoAWYwD+AqAWYwD+AsAWYwD+AuAWYwD+AgAXYwD+AkAXYwD+
AmAXYwD+AoAXYwD+AqAXYwD+AsAXYwD+AuAXYwD+AgAYYwD+AiAYYwD+AmAYYwD+AoAYYwD+AqAY
YwD+AsAYYwD+AgAZYwD+AiAZYwD+AkAZYwD+AmAZYwD+AoAZYwD+AqAZYwD+AuAZYwD+AgAaYwD+
AiAaYwD+AkAaYwD+AoAaYwD+AqAaYwD+AsAaYwD+AuAaYwD+AgAbYwD+AiAbYwD+AkAbYwD+AmAb
YwD+AoAbYwD+AqAbYwD+AsAbYwD+AuAbYwD+AgAcYwD+AiAcYwD+AkAcYwD+AmAcYwD+AoAcYwD+
AqAcYwD+AsAcYwD+AuAcYwD+AgAdYwD+AiAdYwD+AkAdYwD+AmAdYwD+AoAdYwD+AqAdYwD+AsAd
YwD+AuAdYwD+AgAeYwD+AiAeYwD+AmAeYwD+AoAeYwD+AqAeYwD+AsAeYwD+AuAeYwD+AgAfYwD+
AiAfYwD+AkAfYwD+AmAfYwD+AoAfYwD+AhwAAwABAAQABAAFAAcABgAWAAgAGQAJABsACgAcAAsA
HwAMACUADQA0AA4AOQAPADwAEABCABEATQASAFIAEwBVABQAWQAVAFsAFgBeABcAYAAYAG8AAABA
ApcEAACiEZsEAADfEaAEAABAApcEAACiEaUEAADfEaoEAADSDJcEAAAtCJcEAABPDZcEAACHDZcE
AAAvCq8EAACvC5cEAAAFCJcEAADABpcEAAAJApcEAAAqD7cEAAAEEZcEAADjEJcEAACfD5cEAAC5
DJcEAACMCpcEAABAApcEAACiEb8EAAD4EcQEAAClDckEAACIB88EAABOEdUEAAArB5cEAAB7DtoE
AABaD9oEAABJB5cEAAC7ENoEAAC0EpcEAAD8DJcEAAC/AeIEAACJEucEAADSDJcEAAAtCJcEAABP
DZcEAACHDZcEAAAvCq8EAACvC5cEAAAFCJcEAADABpcEAAAJApcEAAAqD7cEAAAEEZcEAADjEJcE
AACfD5cEAACMCpcEAAC5DJcEAAAtCJcEAAAqD7cEAAAJAtoEAADABpcEAADjEJcEAAArB5cEAAB7
DtoEAABaD9oEAABJB5cEAAC7ENoEAAC0EpcEAAD8DJcEAAC/AewEAACJEvEEAADSDJcEAAAtCJcE
AABPDZcEAACHDZcEAAAvCq8EAADABpcEAAAJApcEAAAqD7cEAAAEEZcEAADjEJcEAACMCpcEAAAt
CJcEAAAqD7cEAAAJAtoEAADABpcEAADjEJcEAAArB5cEAAB7DtoEAABaD9oEAABJB5cEAABgAfYE
AACBAfsEAACkAQAFAAC/AQUFAACJEgoFAAC7ENoEAAC/AQUFAACJEgoFAAC/AQUFAACJEgoFAADS
DJcEAAAtCJcEAABPDZcEAACHDZcEAAAvCq8EAACvC5cEAAAFCJcEAADABpcEAAAJApcEAAAqD7cE
AAAEEZcEAADjEJcEAACfD5cEAACMCpcEAAC5DJcEAAAtCJcEAAAqD7cEAAAJAtoEAADABpcEAADj
EJcEAgADAAMAAQAEAAMAAgAFAAUAAQAGAAUAAgAHAAcAAQAIAAcAAgAKAAkAAQALAAkAAgAMAAsA
AQANAAsAAgAOAA0AAQAPAA0AAgARAA8AAQASAA8AAgATABEAAQAUABEAAgAVABMAAQAWABMAAgAX
ABUAAQAYABUAAgAZABcAAQAaABcAAgAbABkAAQAcABkAAgAdABsAAQAeABsAAgAfAB0AAQAgAB0A
AgAhAB8AAQAiAB8AAgAjACEAAQAkACEAAgAlACMAAQAmACMAAgAnACUAAQAoACUAAgApACcAAQAq
ACcAAgArACkAAQAsACkAAgAtACsAAQAuACsAAgAwAC0AAQAxAC0AAgAyAC8AAQAzAC8AAgA0ADEA
AQA1ADEAAgA5ADMAAgA6ADUAAQA7ADUAAgA8ADcAAgA/ADkAAQBAADkAAgBBADsAAQBCADsAAgBD
AD0AAQBEAD0AAgBGAD8AAQBHAD8AAgBIAEEAAQBJAEEAAgBKAEMAAQBLAEMAAgBMAEUAAQBNAEUA
AgBOAEcAAQBPAEcAAgBQAEkAAQBRAEkAAgBTAEsAAQBUAEsAAgBVAE0AAQBWAE0AAgBXAE8AAQBY
AE8AAgBZAFEAAQBaAFEAAgBbAFMAAQBcAFMAAgBdAFUAAQBeAFUAAgBfAFcAAQBgAFcAAgBhAFkA
AQBiAFkAAgBjAFsAAQBkAFsAAgBlAF0AAQBmAF0AAgBnAF8AAQBoAF8AAgBpAGEAAQBqAGEAAgBr
AGMAAQBsAGMAAgBtAGUAAQBuAGUAAgBvAGcAAQBwAGcAAgByAGkAAQBzAGkAAgB0AGsAAQB1AGsA
AgB2AG0AAQB3AG0AAgB4AG8AAQB5AG8AAgB6AHEAAQB7AHEAAgB9AHMAAQB+AHMAAgB/AHUAAQCA
AHUAAgCBAHcAAQCCAHcAAgCEAHkAAQCFAHkAAgCGAHsAAQCHAHsAAgCIAH0AAQCJAH0AAgCKAH8A
AQCLAH8AAgCMAIEAAQCNAIEAAgCOAIMAAQCPAIMAAgCRAIUAAQCSAIUAAgCTAIcAAQCUAIcAAgCV
AIkAAQCWAIkAAgCXAIsAAQCYAIsAAgCZAI0AAQCaAI0AAgCbAI8AAQCcAI8AAgCdAJEAAQCeAJEA
AgCfAJMAAQCgAJMAAgChAJUAAQCiAJUAAgCjAJcAAQCkAJcAAgClAJkAAQCmAJkAAgCoAJsAAQCp
AJsAAgCqAJ0AAQCrAJ0AAgCsAJ8AAQCtAJ8AAgCuAKEAAQCvAKEAAgCwAKMAAQCxAKMAAgCzAKUA
AQC0AKUAAgC1AKcAAQC2AKcAAgC3AKkAAQC4AKkAAgC6AKsAAQC7AKsAAgC8AK0AAQC9AK0AAgC+
AK8AAQC/AK8AAgDAALEAAQDBALEAAgDDALMAAQDEALMAAgDFALUAAQDGALUAAgDIALcAAQDJALcA
AgDKALkAAQDLALkAAgDMALsAAQDNALsAAgDPAL0AAQDQAL0AAgDRAL8AAQDSAL8AAgDUAMEAAQDV
AMEAAgDWAMMAAQDXAMMAAgDYAMUAAQDZAMUAAgDaAMcAAQDbAMcAAgDcAMkAAQDdAMkAAgDeAMsA
AQDfAMsAAgDgAM0AAQDhAM0AAgDiAM8AAQDjAM8AAgDkANEAAQDlANEAAgDmANMAAQDnANMAAgDo
ANUAAQDpANUAAgDqANcAAQDrANcAAgDsANkAAQDtANkAAgDuANsAAQDvANsAAgDwAN0AAQDxAN0A
AgDzAN8AAQD0AN8AAgD1AOEAAQD2AOEAAgD3AOMAAQD4AOMAAgD5AOUAAQD6AOUAAgD7AOcAAQD8
AOcA2gDgACYBMQE7AXIBzwHjAfMB+gELAlACagIEgAAAAQAAAGMexXUAAAAAAAC7AAAABAAAAAAA
AAAAAAAA1QLEAQAAAAANAAAAAAAAAAAAAADeApsKAAAAAAQAAAAAAAAAAAAAANUCHAEAAAAABAAA
AAAAAAAAAAAA5wIQDQAAAAAEAAAAAAAAAAAAAADVAlQHAAAAAAQAAAAAAAAAAAAAANUCbgsAAAAA
DQAAAAAAAAAAAAAA3gL1AAAAAAAEAAAAAAAAAAAAAADwArcPAAAAAAAAAAABAAAAlw4AAAoAAwAL
AAMADAADAA0AAwAOAAQADwAEABAABAARAAQAEgAGABMABgAUAAYAFQAGABYABgAXAAYAGAAGABkA
BwAaAAcAaQBsAW0AoQFvAMMBbwC2As0AbAEAAAAAADw+OV9fMF8wADxNYWluPmJfXzBfMAA8Pjlf
XzBfMQA8TWFpbj5iX18wXzEATnVsbGFibGVgMQBJRW51bWVyYWJsZWAxAElPcmRlcmVkRW51bWVy
YWJsZWAxAFRhc2tgMQBJRW51bWVyYXRvcmAxAExpc3RgMQBUb0ludDMyAExvdFJlY2VpdmVkTW9k
ZWxWMgA8PjlfXzBfMgA8TWFpbj5iX18wXzIARnVuY2AyAElHcm91cGluZ2AyAFNUX2VjNzdhZWE2
NzcxNDQ3NjdiMjFkMmVkYTAwYmM0MDA0AGdldF9VVEY4ADw+OQA8TW9kdWxlPgBNaWNyb3NvZnQu
U3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBTeXN0ZW0uRGF0YQBQdWJsaWNEYXRhAFByaXZh
dGVEYXRhAEludGVybmFsRGF0YQBnZXRfcHVibGljX2RhdGEAc2V0X3B1YmxpY19kYXRhAGdldF9w
cml2YXRlX2RhdGEAc2V0X3ByaXZhdGVfZGF0YQBnZXRfaW50ZXJuYWxfZGF0YQBzZXRfaW50ZXJu
YWxfZGF0YQBnZXRfZGF0YQBzZXRfZGF0YQBtc2NvcmxpYgA8PmMAU3lzdGVtLkNvbGxlY3Rpb25z
LkdlbmVyaWMAUG9zdEFzeW5jAERvYwBnZXRfQmFsZUlkAHNldF9CYWxlSWQAQWRkAExvdFJlY2Vp
dmVkRGVzZXJpYWxpemVkAGdldF9kb2N1bWVudF9pZABzZXRfZG9jdW1lbnRfaWQAPGRhdGE+a19f
QmFja2luZ0ZpZWxkADxwdWJsaWNfZGF0YT5rX19CYWNraW5nRmllbGQAPHByaXZhdGVfZGF0YT5r
X19CYWNraW5nRmllbGQAPGludGVybmFsX2RhdGE+a19fQmFja2luZ0ZpZWxkADxCYWxlSWQ+a19f
QmFja2luZ0ZpZWxkADxkb2N1bWVudF9pZD5rX19CYWNraW5nRmllbGQAPFdvb2xTdHlsZT5rX19C
YWNraW5nRmllbGQAPGFzc2V0X3R5cGU+a19fQmFja2luZ0ZpZWxkADxldmVudF90eXBlPmtfX0Jh
Y2tpbmdGaWVsZAA8TG90TG9jYXRpb25EYXRlPmtfX0JhY2tpbmdGaWVsZAA8V29vbFJlY2VpcHRE
YXRlPmtfX0JhY2tpbmdGaWVsZAA8R3Jvc3NLZz5rX19CYWNraW5nRmllbGQAPFN0b3JhZ2VPcmc+
a19fQmFja2luZ0ZpZWxkADxMb3RMb2NhdGlvbj5rX19CYWNraW5nRmllbGQAPFByb2R1Y2VyTm8+
a19fQmFja2luZ0ZpZWxkADxMb3RObz5rX19CYWNraW5nRmllbGQAPGV2ZW50X3RpbWVzdGFtcD5r
X19CYWNraW5nRmllbGQAPFRhbG1hblJlZmVyZW5jZU51bWJlcj5rX19CYWNraW5nRmllbGQAPExv
dE5vQ2F0ZWdvcnlTZWFzb25OdW1iZXI+a19fQmFja2luZ0ZpZWxkADxyZWZlcmVuY2VzPmtfX0Jh
Y2tpbmdGaWVsZAA8Tm9PZkJhbGVzPmtfX0JhY2tpbmdGaWVsZAA8dGFncz5rX19CYWNraW5nRmll
bGQAPFJXU0NlcnRpZmljYXRpb25EZXRhaWxzPmtfX0JhY2tpbmdGaWVsZAA8cmVjaXBpZW50cz5r
X19CYWNraW5nRmllbGQAPFJXU1N0YXR1cz5rX19CYWNraW5nRmllbGQAPE11bGVzaW5nU3RhdHVz
PmtfX0JhY2tpbmdGaWVsZAA8ZG9jdW1lbnQ+a19fQmFja2luZ0ZpZWxkADxFdmVudD5rX19CYWNr
aW5nRmllbGQAPGZ1bGxfZXZlbnQ+a19fQmFja2luZ0ZpZWxkADxzdW1tYXJ5PmtfX0JhY2tpbmdG
aWVsZAA8dmlzaWJpbGl0eT5rX19CYWNraW5nRmllbGQARGJDb21tYW5kAFNxbENvbW1hbmQAZ2V0
X1N0YWNrVHJhY2UAZGVmYXVsdEluc3RhbmNlAGdldF9TdGF0dXNDb2RlAEh0dHBTdGF0dXNDb2Rl
AGdldF9Jc1N1Y2Nlc3NTdGF0dXNDb2RlAGdldF9NZXNzYWdlAEh0dHBSZXNwb25zZU1lc3NhZ2UA
RGF0YVRhYmxlAFZhcmlhYmxlAEVudW1lcmFibGUASURpc3Bvc2FibGUAVG9Eb3VibGUAUnVudGlt
ZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAZ2V0X1dvb2xTdHlsZQBzZXRfV29vbFN0eWxl
AERhdGVUaW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAc2V0X0NvbW1hbmRUeXBl
AFNlY3VyaXR5UHJvdG9jb2xUeXBlAGdldF9hc3NldF90eXBlAHNldF9hc3NldF90eXBlAGdldF9l
dmVudF90eXBlAHNldF9ldmVudF90eXBlAFN5c3RlbS5Db3JlAEZhaWx1cmUAZ2V0X0N1bHR1cmUA
c2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBJ
bnRlcm5hbERhdGFDb2xsZWN0aW9uQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBEaXNwb3Nl
AFBhcnNlAGdldF9Mb3RMb2NhdGlvbkRhdGUAc2V0X0xvdExvY2F0aW9uRGF0ZQBnZXRfV29vbFJl
Y2VpcHREYXRlAHNldF9Xb29sUmVjZWlwdERhdGUAZ2V0X1N0YXRlAEVkaXRvckJyb3dzYWJsZVN0
YXRlAENvbm5lY3Rpb25TdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5v
blVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0
cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUA
VGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBB
c3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1
dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNT
SVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUA
UnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHZhbHVlAFNlcmlhbGl6ZQBn
ZXRfR3Jvc3NLZwBzZXRfR3Jvc3NLZwBPcmRlckJ5RGVzY2VuZGluZwBFbmNvZGluZwBTeXN0ZW0u
UnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAExvZwBnZXRfU3RvcmFnZU9yZwBzZXRfU3RvcmFn
ZU9yZwBVcmkATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sATG90UmVjZWl2ZWRNb2RlbABTY3JpcHRPYmplY3RNb2Rl
bABTeXN0ZW0uQ29tcG9uZW50TW9kZWwARXZlbnREZXRhaWwAU1RfZWM3N2FlYTY3NzE0NDc2N2Iy
MWQyZWRhMDBiYzQwMDQuZGxsAHNldF9TZWN1cml0eVByb3RvY29sAGdldF9JdGVtAFN5c3RlbQBU
cmltAEVudW0AcmVzb3VyY2VNYW4AT3BlbgBTY3JpcHRNYWluAGdldF9Mb3RMb2NhdGlvbgBzZXRf
TG90TG9jYXRpb24AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lz
dGVtLldlYi5TY3JpcHQuU2VyaWFsaXphdGlvbgBnZXRfVHJhbnNhY3Rpb24AU3lzdGVtLlJlZmxl
Y3Rpb24ARGF0YVRhYmxlQ29sbGVjdGlvbgBEYXRhUm93Q29sbGVjdGlvbgBzZXRfQ29ubmVjdGlv
bgBEYkNvbm5lY3Rpb24AQWNxdWlyZUNvbm5lY3Rpb24AU3FsQ29ubmVjdGlvbgBFeGNlcHRpb24A
U3lzdGVtLkRhdGEuQ29tbW9uAGdldF9Qcm9kdWNlck5vAHNldF9Qcm9kdWNlck5vAGdldF9Mb3RO
bwBzZXRfTG90Tm8AQ3VsdHVyZUluZm8AZ2V0X2V2ZW50X3RpbWVzdGFtcABzZXRfZXZlbnRfdGlt
ZXN0YW1wAGdycABTeXN0ZW0uTmV0Lkh0dHAAU3lzdGVtLkxpbnEAQ2hhcgBnZXRfVGFsbWFuUmVm
ZXJlbmNlTnVtYmVyAHNldF9UYWxtYW5SZWZlcmVuY2VOdW1iZXIAZ2V0X0xvdE5vQ2F0ZWdvcnlT
ZWFzb25OdW1iZXIAc2V0X0xvdE5vQ2F0ZWdvcnlTZWFzb25OdW1iZXIAZ2V0X1Jlc291cmNlTWFu
YWdlcgBDb25uZWN0aW9uTWFuYWdlcgBTZXJ2aWNlUG9pbnRNYW5hZ2VyAEV2ZW50c09iamVjdFdy
YXBwZXIASmF2YVNjcmlwdFNlcmlhbGl6ZXIARmlyZUVycm9yAElFbnVtZXJhdG9yAEdldEVudW1l
cmF0b3IALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21w
aWxlclNlcnZpY2VzAGdldF9yZWZlcmVuY2VzAHNldF9yZWZlcmVuY2VzAFN5c3RlbS5SZXNvdXJj
ZXMAU1RfZWM3N2FlYTY3NzE0NDc2N2IyMWQyZWRhMDBiYzQwMDQuUHJvcGVydGllcy5SZXNvdXJj
ZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUX2VjNzdhZWE2NzcxNDQ3NjdiMjFkMmVkYTAw
YmM0MDA0LlByb3BlcnRpZXMAZ2V0X05vT2ZCYWxlcwBzZXRfTm9PZkJhbGVzAGdldF9UYWJsZXMA
Z2V0X1ZhcmlhYmxlcwBnZXRfdGFncwBzZXRfdGFncwBTZXR0aW5ncwBTeXN0ZW0uVGhyZWFkaW5n
LlRhc2tzAGdldF9SV1NDZXJ0aWZpY2F0aW9uRGV0YWlscwBzZXRfUldTQ2VydGlmaWNhdGlvbkRl
dGFpbHMAU3lzdGVtLldlYi5FeHRlbnNpb25zAFN5c3RlbS5Db2xsZWN0aW9ucwBnZXRfQ29ubmVj
dGlvbnMAU3lzdGVtLk5ldC5IdHRwLkhlYWRlcnMASHR0cEhlYWRlcnMASHR0cFJlcXVlc3RIZWFk
ZXJzAGdldF9EZWZhdWx0UmVxdWVzdEhlYWRlcnMATG90UmVjZWl2ZWRNb2RlbFB1YmxpY0NsYXNz
AExvdFJlY2VpdmVkTW9kZWxQcml2YXRlQ2xhc3MAU3VjY2VzcwBzZXRfQmFzZUFkZHJlc3MAZ2V0
X0R0cwBTY3JpcHRSZXN1bHRzAGdldF9yZWNpcGllbnRzAHNldF9yZWNpcGllbnRzAGdldF9FdmVu
dHMAZ2V0X1JXU1N0YXR1cwBzZXRfUldTU3RhdHVzAGdldF9NdWxlc2luZ1N0YXR1cwBzZXRfTXVs
ZXNpbmdTdGF0dXMAZ2V0X1Jvd3MAQ29uY2F0AE9iamVjdABTZWxlY3QAU3lzdGVtLk5ldABEYXRh
U2V0AFNwbGl0AGdldF9EZWZhdWx0AGdldF9SZXN1bHQAc2V0X1Rhc2tSZXN1bHQAU3lzdGVtLkRh
dGEuU3FsQ2xpZW50AEh0dHBDbGllbnQAZ2V0X2RvY3VtZW50AHNldF9kb2N1bWVudABnZXRfQ3Vy
cmVudABTdHJpbmdDb250ZW50AEh0dHBDb250ZW50AGdldF9FdmVudABzZXRfRXZlbnQAZ2V0X2Z1
bGxfZXZlbnQAc2V0X2Z1bGxfZXZlbnQAZ2V0X0NvdW50AEluc2VydABDb252ZXJ0AFRvTGlzdABN
b3ZlTmV4dABTeXN0ZW0uVGV4dABzZXRfQ29tbWFuZFRleHQAdQB2AGdldF9Ob3cARGF0YVJvdwBH
cm91cEJ5AGdldF9Bc3NlbWJseQBTdW1tYXJ5AGdldF9zdW1tYXJ5AHNldF9zdW1tYXJ5AEV4ZWN1
dGVOb25RdWVyeQBnZXRfdmlzaWJpbGl0eQBzZXRfdmlzaWJpbGl0eQBJc051bGxPckVtcHR5AAAA
AAA1CgAKAFYAMgAgAEIARQBHAEkATgAgAFcAbwBvAGwAIABSAGUAYwBlAGkAdgBlAGQAOgAgAAAx
JABQAHIAbwBqAGUAYwB0ADoAOgBTAGUAcgB2AGkAYwBlAFAAbwBzAHQAVQByAGwAACEkAFAAcgBv
AGoAZQBjAHQAOgA6AGEAcABpAGsAZQB5AAA9VQBzAGUAcgA6ADoAdgBhAHIATABvAHQAUgBlAGMA
ZQBpAHYAZQBkAFIAZQBzAHUAbAB0AEwAaQBzAHQAACskAFAAcgBvAGoAZQBjAHQAOgA6AFIAZQBj
AGkAcABpAGUAbgB0AEkAZAAAIQoACgBWADIAIABSAG8AdwAgAEMAbwB1AG4AdAA6ACAAAA1hAHAA
aQBrAGUAeQAAD0wAbwB0ACAATgBvAC4AACNXAG8AbwBsACAAUgBlAGMAZQBpAHAAdAAgAEQAYQB0
AGUAAC9UAGEAbABtAGEAbgAgAFIAZQBmAGUAcgBlAG4AYwBlACAATgB1AG0AYgBlAHIAACFMAG8A
dABOAG8ALQBDAGEAdAAtAFMAZQBhAHMAbwBuAAEdRwByAG8AcwBzACAASwBHACAAKABMAG8AdAAp
AAAZTABvAHQAIABMAG8AYwBhAHQAaQBvAG4AACNMAG8AdAAgAEwAbwBjAGEAdABpAG8AbgAgAEQA
YQB0AGUAABNTAHQAeQBsAGUAVAB5AHAAZQAAD0IAYQBsAGUAIABJAEQAABlOAG8ALgAgAG8AZgAg
AEIAYQBsAGUAcwAAH00AdQBsAGUAcwBpAG4AZwAgAFMAdABhAHQAdQBzAAAVUgBXAFMAIABTAHQA
YQB0AHUAcwAAM1IAVwBTACAAQwBlAHIAdABpAGYAaQBjAGEAdABpAG8AbgAgAEQAZQB0AGEAaQBs
AHMAABlQAHIAbwBkAHUAYwBlAHIAIABOAG8ALgAAF1MAdABvAHIAYQBnAGUAIABPAHIAZwAAG1cA
TwBPAEwAXwBSAEUAQwBFAEkAVgBFAEQAABFXAE8ATwBMAF8ATABPAFQAABV5AHkAeQB5AC0ATQBN
AC0AZABkAAEneQB5AHkAeQAtAE0ATQAtAGQAZAAgAGgAaAA6AG0AbQA6AHMAcwABG3sAIgBkAG8A
YwB1AG0AZQBuAHQAcwAiADoAAAN9AAAzCgAKAFAAUgBJAFYAQQBUAEUAIABBAHIAcgBhAHkAIAB0
AG8AIABQAG8AcwB0ADoAIAAAIWEAcABwAGwAaQBjAGEAdABpAG8AbgAvAGoAcwBvAG4AAC0KAAoA
UABvAHMAdABlAGQAIABzAHUAYwBjAGUAcwBzAGYAdQBsAGwAeQAuAABZUABMAFoALQBCAFIARQBO
AFQATwBOAEIALQBMAF8AQgBSAEUATgBUAE8ATgBCAC4AUwBIAEkARgBUAEQAWABfAEIAQwBfAFcA
TwBPAEwAXwBQAFIATwBEAAGAzXUAcABkAGEAdABlACAAQgBDAF8AVwBvAG8AbABSAGUAYwBlAGkA
cAB0ACAAcwBlAHQAIABQAHIAbwBjAGUAcwBzAGUAZAAgAD0AIAAxACwAIABEAGEAdABlAFAAcgBv
AGMAZQBzAHMAZQBkACAAPQAgAEcARQBUAEQAQQBUAEUAKAApACAAdwBoAGUAcgBlACAAWwBUAGEA
bABtAGEAbgAgAFIAZQBmAGUAcgBlAG4AYwBlACAATgB1AG0AYgBlAHIAXQAgAD0AIAAnAAEDJwAB
MwoACgBQAG8AcwB0AGUAZAAgAG4AbwB0ACAAcwB1AGMAYwBlAHMAcwBmAHUAbAA6ACAAACsKAAoA
RQBOAEQAIABXAG8AbwBsACAAUgBlAGMAZQBpAHYAZQBkADoAIAAAN0wAYQBtAGIAaQBuAGcAIABT
AGMAcgBpAHAAdAAgAFQAYQBzAGsAIABFAHIAcgBvAHIAOgAgAAADDQAAcVMAVABfAGUAYwA3ADcA
YQBlAGEANgA3ADcAMQA0ADQANwA2ADcAYgAyADEAZAAyAGUAZABhADAAMABiAGMANAAwADAANAAu
AFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAyHI6OiYO9EmlTcOB5mDM
xAAEIAEBCAMgAAEFIAEBEREEIAEBDgYgAQERgJ2Ahwc0Dg4STQ4ODhUSPQEOFRI9AQ4VEj0BDhUS
PQESXBFRElUSXA4ODg4OCBJZEl0SYRURZQEVEmkBElwVEj0BEhgOEm0ScRUSdQESXBJcEVEOFRI9
AQ4SGBJIElASXBJgElQSXBJgFRI9AQ4VEj0BDhUSPQEOHQ4ODg4OEnkVEWUBEhgRfRKAgQUgABKA
qQQAABFRAyAADgUAAg4ODgcgAwEOCB0FBgABARGAtQUgABKAuQYgARKAvRwDIAAcBRUSPQEOBhUS
PQESXAUgABKAwQMgAAgGIAESgMkIBSAAEoDNBSABARMABiABARKA1QUgABKA2QUgAgEODgQgABJZ
BCABHA4EAAENHAUVEUEBDQQAAQgcBRURQQEIAyAAAggVEoCJAhJcDgUgAgEcGCEQAgIVEoDpARUS
gI0CHgEeABUSgOkBHgAVEoCJAh4AHgEFCgISXA4TFRKAiQIVEoCNAg4SXBUSaQESXBoQAgIVEoDp
AR4BFRKA6QEeABUSgIkCHgAeARAKAhUSgI0CDhJcFRJpARJcEBABARUSPQEeABUSgOkBHgAICgEV
EmkBElwCBg4KFRI9ARUSaQESXAggABURZQETAAoVEWUBFRJpARJcBCAAEwAGFRI9ARIYBxUSgOkB
ElwIIAAVEnUBEwAGFRJ1ARJcBQABEVEOBCABDg4GIAEdDh0DBAABAg4EIAEOHAUgAg4IDgUAABKA
9QggAwEOEoD1DgwgAhUSgP0BEnEOEm0HFRKA/QEScQUgABKBAQYgARKBBRwEIAEcHAYVEWUBEhgG
AAMODg4OBSAAEYENBSABARJ5BiABARGBGQQgABF9BSAAEoEdCCAFAggODg4ICAABEoEhEYElBSAA
EoEpByACAQ4SgSkECgESXBkQAgIVEmkBHgAVEoDpAR4AFRKAiQIeAB4BCLd6XFYZNOCJCImEXc2A
gMyRCLA/X38R1Qo6CDG/OFatNk41BAAAAAAEAQAAAAMGEigDBhIsAwYSOAMGEjwGBhURQQENBgYV
EUEBCAMGEkgDBhJMBAYSgJUEBhKAmQMGEiQGBhUSPQEOAwYSMAMGEjQDBhJAAwYSRAMGElADBhJU
AwYSWAMGElwDBhJgAgYIAwYRZAMGEmgJBhUSgIkCElwOFAYVEoCJAhUSgI0CDhJcFRJpARJcBCAA
EigFIAEBEigEIAASLAUgAQESLAQgABI4BSABARI4BCAAEjwFIAEBEjwHIAAVEUEBDQggAQEVEUEB
DQcgABURQQEICCABARURQQEIBCAAEkgFIAEBEkgEIAASTAUgAQESTAUAABKAlQUAABKAmQYAAQES
gJkEAAASJAMAAAEHIAAVEj0BDgggAQEVEj0BDgQgABIwBSABARIwBCAAEjQFIAEBEjQEIAASQAUg
AQESQAQgABJEBSABARJEBCAAElAFIAEBElAEIAASVAUgAQESVAQgABJYBSABARJYBCAAElwFIAEB
ElwEIAASYAUgAQESYAUgAQ4SXBAgARUSaQESXBUSgI0CDhJcAygADgQoABIoBCgAEiwEKAASOAQo
ABI8BygAFRFBAQ0HKAAVEUEBCAQoABJIBCgAEkwFCAASgJUFCAASgJkECAASJAcoABUSPQEOBCgA
EjAEKAASNAQoABJABCgAEkQEKAASUAQoABJUBCgAElgEKAASXAQoABJgCAEACAAAAAAAHgEAAQBU
AhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF9lYzc3YWVhNjc3MTQ0NzY3
YjIxZDJlZGEwMGJjNDAwNAAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIxAABJAQAaLk5FVEZy
YW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3
b3JrIDQuN7QAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwg
bXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tl
bj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAA
AAAAAAAAAAAAUEFEUEFEULQAAABQfwAAAAAAAAAAAABqfwAAACAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAXH8AAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAA
AAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYgAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIA
UwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABAMV1Yx4AAAEAxXVjHj8AAAAAAAAABAAA
AAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQA
cgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBu
AGYAbwAAAFYDAAABADAAMAAwADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAA
AAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBz
AGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8AZQBjADcANwBhAGUAYQA2ADcANwAxADQANAA3ADYA
NwBiADIAMQBkADIAZQBkAGEAMAAwAGIAYwA0ADAAMAA0AAAAPgAPAAEARgBpAGwAZQBWAGUAcgBz
AGkAbwBuAAAAAAAxAC4AMAAuADcANwA3ADkALgAzADAAMQA0ADkAAAAAAHAAKAABAEkAbgB0AGUA
cgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AZQBjADcANwBhAGUAYQA2ADcANwAxADQANAA3ADYANwBi
ADIAMQBkADIAZQBkAGEAMAAwAGIAYwA0ADAAMAA0AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwA
QwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADEAAAAq
AAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcA
aQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAFQAXwBlAGMANwA3AGEAZQBhADYANwA3ADEANAA0
ADcANgA3AGIAMgAxAGQAMgBlAGQAYQAwADAAYgBjADQAMAAwADQALgBkAGwAbAAAAGgAJAABAFAA
cgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBUAF8AZQBjADcANwBhAGUAYQA2ADcANwAxADQANAA3
ADYANwBiADIAMQBkADIAZQBkAGEAMAAwAGIAYwA0ADAAMAA0AAAAQgAPAAEAUAByAG8AZAB1AGMA
dABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADcANwA5AC4AMwAwADEANAA5AAAAAABGAA8AAQBB
AHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADcANwA5AC4AMwAwADEA
NAA5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAcAAADAAAAHw/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAA==</BinaryItem>
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="346"
            Column="29" />
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="354"
            Column="40" />
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Lot Received Script Task OLD"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:Disabled="True"
      DTS:DTSID="{dc028f90-a587-4879-917c-92982eaaf85a}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Lot Received Script Task OLD"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="2">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="EventFilter">13,7,OnError,19,OnExecStatusChanged,13,OnInformation,13,OnPostExecute,14,OnPostValidate,12,OnPreExecute,13,OnPreValidate,10,OnProgress,13,OnQueryCancel,12,OnTaskFailed,22,OnVariableValueChanged,9,OnWarning,18,ScriptTaskLogEntry</DTS:Property>
        <DTS:Property
          DTS:EventName="OnError"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnExecStatusChanged"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnInformation"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnPostExecute"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnPostValidate"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnPreExecute"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnPreValidate"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnProgress"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnQueryCancel"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnTaskFailed"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnVariableValueChanged"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnWarning"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="ScriptTaskLogEntry"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
      </DTS:LoggingOptions>
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_7d10f3fd06c24c8dbae829f93e548c4d"
          VSTAMajorVersion="14"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="$Project::apikey,$Project::ServicePostUrl,$Project::ServiceGetUrl"
          ReadWriteVariables="User::varLotReceivedResultList">
          <ProjectItem
            Name="LotReceivedModel.cs"
            Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ST_007af92002924d7ebb6f33274ee4e129
{
    public class LotReceivedModel
    {
		public LotReceivedModel()
		{

		}

        //public int Id { get; set; }
        public string LotNo { get; set; }
        public string WoolReceiptDate { get; set; }        
        public string TalmanReferenceNumber { get; set; }
        public string LotNoCategorySeasonNumber { get; set; }
        public Nullable<double> GrossKg { get; set; }
        //public string GrossKg { get; set; }
        public string LotLocation { get; set; }
        public string LotLocationDate { get; set; }
        public string WoolStyle { get; set; }
        public string BaleId { get; set; }
        public Nullable<int> NoOfBales { get; set; }
        public string MulesingStatus { get; set; }
        public string RWSStatus { get; set; }
        public string RWSCertificationDetails { get; set; }
        public string ProducerNo { get; set; }
        public string StorageOrg { get; set; }


        /*PRD VIEW
         
        Lot No.
        Wool Receipt Date
        Talman Reference Number
        LotNo-Cat-Season
        Gross KG (Lot)
        Lot Location 
        Lot Location Date
        StyleType
        Bale ID
        No. of Bales        
        Mulesing Status
        RWS
        RWS Comments
        Producer No.
        Storage Org
        
         
        */

    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_007af92002924d7ebb6f33274ee4e129.Properties.Settings.get_Default():ST_007af92002924d7ebb6f33274ee4e129.Properties.Sett" +
    "ings")]

namespace ST_007af92002924d7ebb6f33274ee4e129.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_007af92002924d7ebb6f33274ee4e129.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_007af92002924d7ebb6f33274ee4e129.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_007af92002924d7ebb6f33274ee4e129.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_007af92002924d7ebb6f33274ee4e129.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_007af92002924d7ebb6f33274ee4e129.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion

#region Namespaces
using Newtonsoft.Json;
using System;
using System.Data;
using System.Globalization;
using System.Net.Http;
using System.Text;
using System.Text.RegularExpressions;
using System.Web;

#endregion

namespace ST_007af92002924d7ebb6f33274ee4e129
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            try
            {
                Dts.Log("\n\n" + "BEGIN Wool Received: " + DateTime.Now, 0, null);

                string servicePostUrl = Dts.Variables["$Project::ServicePostUrl"].Value.ToString();
                string serviceGetUrl = Dts.Variables["$Project::ServiceGetUrl"].Value.ToString();
                string apikey = Dts.Variables["$Project::apikey"].Value.ToString();
                DataSet dsLotReceivedResultList = (DataSet)Dts.Variables["User::varLotReceivedResultList"].Value;

                if (dsLotReceivedResultList.Tables.Count > 0)
                {
                    if (dsLotReceivedResultList.Tables[0].Rows.Count > 0)
                    {
                        Dts.Log("\n\n" + "Row Count: " + dsLotReceivedResultList.Tables[0].Rows.Count, 0, null);

                        HttpClient client = new HttpClient();
                        client.BaseAddress = new Uri(servicePostUrl);
                        client.DefaultRequestHeaders.Add("apikey", apikey);
                        
                        string APIGetUrl = serviceGetUrl;

                        LotReceivedModel objLotReceivedModel;
                        DocumentModel objDocumentRootModel;
                        bool bExists = false;

                        foreach (DataRow dr in dsLotReceivedResultList.Tables[0].Rows)
                        {
                            objLotReceivedModel = new LotReceivedModel
                            {
                                LotNo = dr["Lot No."].ToString(),
                                WoolReceiptDate = dr["Wool Receipt Date"].ToString(),
                                TalmanReferenceNumber = dr["Talman Reference Number"].ToString(),
                                LotNoCategorySeasonNumber = dr["LotNo-Cat-Season"].ToString(),
                                GrossKg = Convert.ToDouble(dr["Gross KG (Lot)"]),
                                LotLocation = dr["Lot Location"].ToString(),
                                LotLocationDate = dr["Lot Location Date"].ToString(),
                                WoolStyle = dr["StyleType"].ToString(),
                                BaleId = dr["Bale ID"].ToString(),
                                NoOfBales = Convert.ToInt32(dr["No. of Bales"]),
                                MulesingStatus = dr["Mulesing Status"].ToString(),
                                RWSStatus = dr["RWS Status"].ToString(),
                                RWSCertificationDetails = dr["RWS Certification Details"].ToString(),
                                ProducerNo = dr["Producer No."].ToString(),
                                StorageOrg = dr["Storage Org"].ToString()
                            };

                            var strLotReceivedModel = JsonConvert.SerializeObject(objLotReceivedModel);

                            string strDocumentId = objLotReceivedModel.TalmanReferenceNumber;
                            string strReference = objLotReceivedModel.TalmanReferenceNumber;
                            string strLotNoCategorySeasonNumber = objLotReceivedModel.LotNoCategorySeasonNumber;
                            string strRWS = objLotReceivedModel.RWSStatus;
                            string strProducerNo = objLotReceivedModel.ProducerNo;
                            DateTime dtWoolReceiptDate = DateTime.Parse(objLotReceivedModel.WoolReceiptDate);  
                            string strWoolReceiptDate = dtWoolReceiptDate.ToString("yyyy-MM-dd");
                            string strEvent = "WOOL_RECEIVED";
                            string strAsset = "WOOL_LOT";
                            string strTags = string.Empty;
                                                        
                            serviceGetUrl = APIGetUrl + strDocumentId;
                            var getResponse = client.GetAsync(serviceGetUrl).Result;
                            var responseStringAll = getResponse.Content.ReadAsStringAsync();

                            var settings = new JsonSerializerSettings { StringEscapeHandling = StringEscapeHandling.EscapeHtml };

                            if (getResponse.StatusCode == System.Net.HttpStatusCode.OK)
                            {
                                if (!responseStringAll.Result.ToString().Contains("\"No document was found with a matching document_id\""))
                                {
                                    objDocumentRootModel = JsonConvert.DeserializeObject<DocumentModel>(responseStringAll.Result.ToString(), settings);

                                    foreach (var ev in objDocumentRootModel.events)
                                    {
                                        if (ev.event_type == "WOOL_RECEIVED")
                                        {
                                            //ev.data.GrossKg *= 1.0M;
                                            var strData = JsonConvert.SerializeObject(ev.data);
                                            //Dts.Log("\n\n" + "Data serialized from API endpont by_document_id for document_id: " + strDocumentId + " " + strData, 0, null);

                                            if (strData == strLotReceivedModel)
                                            {
                                                bExists = true;
                                                //Dts.Log("\n\n" + "MATCH", 0, null);
                                                break;
                                            }
                                            else
                                            {
                                                bExists = false;
                                                //Dts.Log("\n\n" + "NO MATCH", 0, null);
                                            }
                                        }
                                    }
                                }
                                else
                                    bExists = false;
                            }
                            else
                                bExists = false;

                            if (!bExists)
                            {
                                if (!string.IsNullOrEmpty(strLotNoCategorySeasonNumber))
                                {
                                    strLotNoCategorySeasonNumber = "\"" + strLotNoCategorySeasonNumber;
                                    strTags += strLotNoCategorySeasonNumber;
                                }

                                if (!string.IsNullOrEmpty(strRWS))
                                {
                                    strRWS = "\",\"" + strRWS;
                                    strTags += strRWS;
                                }

                                if (!string.IsNullOrEmpty(strProducerNo))
                                {
                                    strProducerNo = "\",\"" + strProducerNo;
                                    strTags += strProducerNo;
                                }

                                if (!string.IsNullOrEmpty(strWoolReceiptDate))
                                {
                                    strWoolReceiptDate = "\",\"" + strWoolReceiptDate;
                                    strTags += strWoolReceiptDate;
                                }

                                if (!string.IsNullOrEmpty(strTags))
                                    strTags += "\"";

                                string strPost = "{\"document_id\":" + "\"" + strDocumentId + "\"," + "\"document\": {\"asset_type\":" + "\"" + strAsset + "\"," + "\"references\": [" + "\"" + strReference + "\"" + "], " + "\"tags\": [" + strTags + "]}," + "\"event\": {\"event_type\":" + "\"" + strEvent + "\"," + "\"visibility\": \"PUBLIC\", \"data\":";

                                strPost = strPost + strLotReceivedModel + "}}";

                                //Dts.Log("\n\n" + "String to Post: " + strPost, 0, null);
                                Dts.Log("\n\n" + "Document Id to Post: " + strDocumentId, 0, null);

                                HttpContent content = new StringContent(strPost, Encoding.UTF8, "application/json");
                                var varResult = client.PostAsync(servicePostUrl, content).Result;

                                if (varResult.IsSuccessStatusCode)
                                {
                                    Dts.Log("\n\n" + "Posted successfully.", 0, null);
                                    Dts.TaskResult = (int)ScriptResults.Success;
                                }
                                else
                                {
                                    Dts.Log("\n\n" + "Posted not successful: " + varResult.StatusCode, 0, null);
                                    Dts.TaskResult = (int)ScriptResults.Failure;
                                }
                            }
                        }
                    }
                }

                Dts.Log("\n\n" + "END Wool Received: " + DateTime.Now, 0, null);
            }                        

            catch (Exception ex)
            {
                Dts.Log("\n\n" + "Exception: " + ex.ToString(), 0, null);
                //Dts.Events.FireError(0, "An error occured", ex.Message, String.Empty, 0);
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

        public static string DecodeEncodedNonAsciiCharacters(string YourJSONOutput)
        {
            return Regex.Replace(
               YourJSONOutput,
               @"\\u(?<Value>[a-zA-Z0-9]{4})",
               m =>
               {
                   return ((char)int.Parse(m.Groups["Value"].Value, NumberStyles.HexNumber)).ToString();
               });
        }

    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_7d10f3fd06c24c8dbae829f93e548c4d.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{0A9BF70C-6CAA-402B-8776-4934FD0CD035}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_007af92002924d7ebb6f33274ee4e129</RootNamespace>
    <AssemblyName>ST_7d10f3fd06c24c8dbae829f93e548c4d</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <HintPath>C:\Users\brenton.baartzes\AppData\Local\Temp\Vsta\SSIS_ST150\VstaIXDDDf2ejkm2uIkZ21aiLA\packages\Newtonsoft.Json.12.0.3\lib\net45\Newtonsoft.Json.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http">
      <Private>True</Private>
    </Reference>
    <Reference Include="System.Net.Http.Formatting, Version=5.2.7.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <HintPath>C:\Users\brenton.baartzes\AppData\Local\Temp\Vsta\SSIS_ST150\Vsta9CyYH7OU8EeuCQtWIBnidQ\packages\Microsoft.AspNet.WebApi.Client.5.2.7\lib\net45\System.Net.Http.Formatting.dll</HintPath>
    </Reference>
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.ServiceProcess" />
    <Reference Include="System.Web" />
    <Reference Include="System.Web.Http, Version=5.2.7.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <HintPath>C:\Users\brenton.baartzes\AppData\Local\Temp\Vsta\SSIS_ST150\VstaJWhyWAWpPUCxXSu1eXlOow\packages\Microsoft.AspNet.WebApi.Core.5.2.7\lib\net45\System.Web.Http.dll</HintPath>
    </Reference>
    <Reference Include="System.Web.Http.WebHost, Version=5.2.7.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <HintPath>C:\Users\brenton.baartzes\AppData\Local\Temp\Vsta\SSIS_ST150\VstaJWhyWAWpPUCxXSu1eXlOow\packages\Microsoft.AspNet.WebApi.WebHost.5.2.7\lib\net45\System.Web.Http.WebHost.dll</HintPath>
    </Reference>
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="DocumentModel.cs" />
    <Compile Include="LotReceivedModel.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="app.config" />
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="app.config"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-12.0.0.0" newVersion="12.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_7d10f3fd06c24c8dbae829f93e548c4d</msb:CodeName>
		<msb:DisplayName>ST_7d10f3fd06c24c8dbae829f93e548c4d</msb:DisplayName>
		<msb:ProjectId>{403F2E91-67F2-4016-9B21-6888AA82E73E}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_7d10f3fd06c24c8dbae829f93e548c4d.csproj"/>
		<msb:File Include="LotReceivedModel.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="DocumentModel.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="app.config"/>
		<msb:File Include="packages.config"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="packages.config"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Newtonsoft.Json" version="12.0.3" targetFramework="net47" />
</packages>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_007af92002924d7ebb6f33274ee4e129")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_007af92002924d7ebb6f33274ee4e129")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="DocumentModel.cs"
            Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ST_007af92002924d7ebb6f33274ee4e129
{
    public class DocumentModel
    {
        public Id _id { get; set; }
        public string asset_type { get; set; }
        public DateTime created_at { get; set; }
        public string document_id { get; set; }
        public IList<Event> events { get; set; }
        public IList<string> references { get; set; }
        public IList<string> tags { get; set; }
        public DateTime updated_at { get; set; }
        public UserId user_id { get; set; }
        public string id { get; set; }
    }

    public class Id
    {
        public string oid { get; set; }
    }

    public class Data
    {
        public string LotNo { get; set; }
        public string WoolReceiptDate { get; set; }
        public string TalmanReferenceNumber { get; set; }
        public string LotNoCategorySeasonNumber { get; set; }
        public Nullable<decimal> GrossKg { get; set; }
        //public string GrossKg { get; set; }
        public string LotLocation { get; set; }
        public string LotLocationDate { get; set; }
        public string WoolStyle { get; set; }
        public string BaleId { get; set; }
        public Nullable<int> NoOfBales { get; set; }
        public string MulesingStatus { get; set; }
        public string RWSStatus { get; set; }
        public string RWSCertificationDetails { get; set; }
        public string ProducerNo { get; set; }
        public string StorageOrg { get; set; }
        //public string DateTime { get; set; }
        //public string SenderName { get; set; }
        //public string SenderCompany { get; set; }
        //public string RecipientName { get; set; }
        //public string RecipientCompany { get; set; }
        //public string BookingReferenceNumber { get; set; }
        //public string ShipperReferenceNumber { get; set; }
        //public string ShippingInstructionNumber { get; set; }
        //public string ContainerNumber { get; set; }
        //public string SealNumber { get; set; }
        //public int? TotalNumberOfBales { get; set; }
        //public decimal? GrossMass { get; set; }
        //public decimal? Tare { get; set; }
        //public decimal? VGM { get; set; }
        //public string AccrediatationNumber { get; set; }
        //public string VesselName { get; set; }
        //public string VoyagerNumber { get; set; }
    }

    public class Event
    {
        public Id _id { get; set; }
        public DateTime? created_at { get; set; }
        public Data data { get; set; }
        public string event_type { get; set; }
        public object recipients { get; set; }
        public DateTime? updated_at { get; set; }
        public string visibility { get; set; }
    }

    public class UserId
    {
        public string oid { get; set; }
    }
}
 ]]></ProjectItem>
          <BinaryItem
            Name="ST_7d10f3fd06c24c8dbae829f93e548c4d.dll">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
EQArDAYAGQArDAoAKQArDBAAMQArDBAAOQArDBAAQQArDBAASQArDBAAUQArDBAAWQArDBAAYQAr
DBAAcQArDAYAmQArDAYAIQErDAYAQQErDBUAaQArDAYAoQCkDlUAeQBUEFsAeQBZCWAAWQF1D2QA
UQFiCWoAUQFCDXIAYQFNCngAaQH1CH8AaQBZCWAAqQA3DYMAeQEaEIkAcQFNCo0AgQEwD5QAkQFZ
CWAAsQArDAYAmQErDBAAsQCUDpoAsQBSDqEAqQF9AacAeQEODK0AuQDiD38AwQBNCrIAsQGvBbcA
DAArDMIAsQFoAMgAFAArDMIAuQF8D9MAeQDxBtgAeQBZCd4AWQGpEOMAsQApAeYAHAC9D/cA6QDu
D/wA4QAXAQEB0QArDAYA0QAmCQkB6QBGBRABJAC9D/cAWQHVDRsBuQGMDyABLAAODDYBNADiD/cA
WQF3EEYBuQA/EEwB+QDpBgYAWQGhEFABWQF1D1UBWQF1D1sB0QFwAGIB2QErDGgBsQAyAXEB6QBk
BUwBUQHIDwEAEQErDH0B4QEuBYMBoQArDAYA6QHKBYwB6QFqEJUBKQErDJsBSQErDAYAGQEQDqcB
AQJNCq0BEQL1CGAAkQHxBrQBIQJZCWAACADYAOABCADcAOUBIABjAOUBIQBjAOUBLgALAG0DLgAT
AHYDLgAbAJUDLgAjAJ4DLgArAMcDLgAzAMcDLgA7AMcDLgBDAJ4DLgBLAM0DLgBTAMcDLgBbAOQD
QABjAOUBQQBjAOUBYABjAOUBYQBjAOUBgABjAOUBgQBjAOUBoABjAOUBoQBjAOUBwABjAOUBwQBj
AOUB4ABjAOUB4QBjAOUBAAFjAOUBAQFjAOUBAwFrAOUBIAFjAOUBIQFjAOUBIwFzAOUBQAFjAOUB
QQFjAOUBYAFjAOUBYQFjAOUBgAFjAOUBgQFjAOUBgwFjAOUBoAFjAOUBoQFjAOUBwAFjAOUBwQFj
AOUB4AFjAOUB4QFjAOUBAAJjAOUBAQJjAOUBIAJjAOUBIQJjAOUBQAJjAOUBQQJjAOUBYAJjAOUB
YQJjAOUBgAJjAOUBgQJjAOUBoQJjAOUBwAJjAOUBwQJjAOUB4AJjAOUB4QJjAOUBAQNjAOUBIANj
AOUBIQNjAOUBQANjAOUBQQNjAOUBYANjAOUBYQNjAOUBgANjAOUBgQNjAOUBoANjAOUBoQNjAOUB
wANjAOUBwQNjAOUB4ANjAOUB4QNjAOUBAARjAOUBAQRjAOUBIARjAOUBIQRjAOUBQARjAOUBQQRj
AOUBYARjAOUBYQRjAOUBgARjAOUBgQRjAOUBoARjAOUBoQRjAOUBwARjAOUBwQRjAOUB4ARjAOUB
4QRjAOUBAAVjAOUBAQVjAOUBIAVjAOUBIQVjAOUBQAVjAOUBQQVjAOUBYAVjAOUBYQVjAOUBgAVj
AOUBgQVjAOUBoAVjAOUBoQVjAOUBwAVjAOUBwQVjAOUB4AVjAOUB4QVjAOUBAAZjAOUBAQZjAOUB
IAZjAOUBIQZjAOUBQAZjAOUBSQZ7AJUDYAZjAOUBaQZ7AJUDgAZjAOUBgQZjAOUBoAZjAOUBwAZj
AOUBAAdjAOUBIAdjAOUBQAdjAOUBYAdjAOUBgAdjAOUBoAdjAOUBwAdjAOUB4AdjAOUBAAhjAOUB
IAhjAOUBQAhjAOUBYAhjAOUBgAhjAOUBoAhjAOUB4AhjAOUBAAljAOUBYAljAOUBgAljAOUBoAlj
AOUBwAljAOUB4AljAOUBAApjAOUBIApjAOUBQApjAOUBYApjAOUBgApjAOUBoApjAOUBwApjAOUB
4ApjAOUBAAtjAOUBIAtjAOUBQAtjAOUBYAtjAOUBgAtjAOUBoAtjAOUBwAtjAOUB4AtjAOUBAAxj
AOUBIAxjAOUBQAxjAOUBYAxjAOUBgAxjAOUBoAxjAOUBwAxjAOUB4AxjAOUBAA1jAOUBHACjAQIA
AQADAAsABAAMAAUAGwAGACIABwAjAAkAMgAKADQAAADTAQ0DAAA5BhIDAABqDxYDAADLARIDAADn
DhsDAAB+DCQDAABqDSQDAABMDxYDAAChASwDAADkARIDAADjARIDAABRCxIDAAA3BxIDAACcCxID
AADUCxIDAAAVCTEDAACNChIDAAAPBxIDAADuBRIDAABvARIDAAAtDToDAAAhDxIDAAAADxIDAAC9
DRIDAAA4CxIDAAB5CRIDAADTAQ0DAABqD0IDAADqAEsDAABXBhIDAADNDlADAABMD0IDAACWEBID
AADjARIDAABRCxIDAAA3BxIDAACcCxIDAADUCxIDAAAVCVQDAACNChIDAAAPBxIDAADuBRIDAABv
ARIDAAAtDToDAAAhDxIDAAAADxIDAAC9DRIDAAA4CxIDAAB5CRIDAADyC1wDAACKBmIDAAC1D2gD
AgABAAMAAQACAAMAAgADAAUAAQAEAAUAAgAFAAcAAQAGAAcAAgAHAAkAAQAIAAkAAgAJAAsAAQAK
AAsAAgALAA0AAQAMAA0AAgANAA8AAQAOAA8AAgAPABEAAQAQABEAAgARABMAAQASABMAAgATABUA
AQAUABUAAgAWABcAAQAXABcAAgAZABkAAQAaABkAAgAbABsAAQAcABsAAgAdAB0AAQAeAB0AAgAf
AB8AAQAgAB8AAgAhACEAAQAiACEAAgAjACMAAQAkACMAAgAlACUAAQAmACUAAgAnACcAAQAoACcA
AgApACkAAQAqACkAAgArACsAAQAsACsAAgAtAC0AAQAuAC0AAgAvAC8AAQAwAC8AAgAxADEAAQAy
ADEAAgAzADMAAQA0ADMAAgA1ADUAAQA2ADUAAgA4ADcAAQA5ADcAAgA6ADkAAQA7ADkAAgA8ADsA
AQA9ADsAAgA+AD0AAQA/AD0AAgBAAD8AAQBBAD8AAgBCAEEAAQBDAEEAAgBEAEMAAQBFAEMAAgBH
AEUAAQBIAEUAAgBLAEcAAQBMAEcAAgBNAEkAAQBOAEkAAgBPAEsAAQBQAEsAAgBRAE0AAQBSAE0A
AgBTAE8AAQBUAE8AAgBVAFEAAQBWAFEAAgBXAFMAAQBYAFMAAgBZAFUAAQBaAFUAAgBbAFcAAQBc
AFcAAgBdAFkAAQBeAFkAAgBfAFsAAQBgAFsAAgBhAF0AAQBiAF0AAgBjAF8AAQBkAF8AAgBlAGEA
AQBmAGEAAgBnAGMAAQBoAGMAAgBtAGUAAgBuAGcAAQBvAGcAAgBwAGkAvADNAPAAFQEuAT8BBIAA
AAEAAABJHuNpAAAAAAAAPAEAAAQAAAAAAAAAAAAAALwB7wAAAAAADQAAAAAAAAAAAAAAxQGOCQAA
AAAEAAAAAAAAAAAAAAC8AdEAAAAAAAQAAAAAAAAAAAAAAM4BYwsAAAAADAAAAAAAAAAAAAAA1wEV
CwAAAAAEAAAAAAAAAAAAAAC8AVYKAAAAAA0AAAAAAAAAAAAAAMUBqgAAAAAAAAAAAAEAAACaDAAA
CwAIAAwACABxACkBAAAAPD45X18yXzAAPERlY29kZUVuY29kZWROb25Bc2NpaUNoYXJhY3RlcnM+
Yl9fMl8wAE51bGxhYmxlYDEASUVudW1lcmFibGVgMQBUYXNrYDEASUVudW1lcmF0b3JgMQBJTGlz
dGAxAFRvSW50MzIAZ2V0X1VURjgAU1RfMDA3YWY5MjAwMjkyNGQ3ZWJiNmYzMzI3NGVlNGUxMjkA
PD45ADxNb2R1bGU+AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAFN5c3Rl
bS5EYXRhAGdldF9kYXRhAHNldF9kYXRhAG1zY29ybGliADw+YwBTeXN0ZW0uQ29sbGVjdGlvbnMu
R2VuZXJpYwBSZWFkQXNTdHJpbmdBc3luYwBHZXRBc3luYwBQb3N0QXN5bmMAU1RfN2QxMGYzZmQw
NmMyNGM4ZGJhZTgyOWY5M2U1NDhjNGQAZ2V0X0JhbGVJZABzZXRfQmFsZUlkAFVzZXJJZABBZGQA
Z2V0X19pZABzZXRfX2lkAGdldF91c2VyX2lkAHNldF91c2VyX2lkAGdldF9pZABzZXRfaWQAZ2V0
X2RvY3VtZW50X2lkAHNldF9kb2N1bWVudF9pZABnZXRfb2lkAHNldF9vaWQAPGRhdGE+a19fQmFj
a2luZ0ZpZWxkADxCYWxlSWQ+a19fQmFja2luZ0ZpZWxkADxpZD5rX19CYWNraW5nRmllbGQAPF9p
ZD5rX19CYWNraW5nRmllbGQAPHVzZXJfaWQ+a19fQmFja2luZ0ZpZWxkADxkb2N1bWVudF9pZD5r
X19CYWNraW5nRmllbGQAPG9pZD5rX19CYWNraW5nRmllbGQAPFdvb2xTdHlsZT5rX19CYWNraW5n
RmllbGQAPGFzc2V0X3R5cGU+a19fQmFja2luZ0ZpZWxkADxldmVudF90eXBlPmtfX0JhY2tpbmdG
aWVsZAA8TG90TG9jYXRpb25EYXRlPmtfX0JhY2tpbmdGaWVsZAA8V29vbFJlY2VpcHREYXRlPmtf
X0JhY2tpbmdGaWVsZAA8R3Jvc3NLZz5rX19CYWNraW5nRmllbGQAPFN0b3JhZ2VPcmc+a19fQmFj
a2luZ0ZpZWxkADxMb3RMb2NhdGlvbj5rX19CYWNraW5nRmllbGQAPFByb2R1Y2VyTm8+a19fQmFj
a2luZ0ZpZWxkADxMb3RObz5rX19CYWNraW5nRmllbGQAPFRhbG1hblJlZmVyZW5jZU51bWJlcj5r
X19CYWNraW5nRmllbGQAPExvdE5vQ2F0ZWdvcnlTZWFzb25OdW1iZXI+a19fQmFja2luZ0ZpZWxk
ADxyZWZlcmVuY2VzPmtfX0JhY2tpbmdGaWVsZAA8Tm9PZkJhbGVzPmtfX0JhY2tpbmdGaWVsZAA8
dGFncz5rX19CYWNraW5nRmllbGQAPFJXU0NlcnRpZmljYXRpb25EZXRhaWxzPmtfX0JhY2tpbmdG
aWVsZAA8cmVjaXBpZW50cz5rX19CYWNraW5nRmllbGQAPGV2ZW50cz5rX19CYWNraW5nRmllbGQA
PFJXU1N0YXR1cz5rX19CYWNraW5nRmllbGQAPE11bGVzaW5nU3RhdHVzPmtfX0JhY2tpbmdGaWVs
ZAA8dXBkYXRlZF9hdD5rX19CYWNraW5nRmllbGQAPGNyZWF0ZWRfYXQ+a19fQmFja2luZ0ZpZWxk
ADx2aXNpYmlsaXR5PmtfX0JhY2tpbmdGaWVsZABSZXBsYWNlAGRlZmF1bHRJbnN0YW5jZQBnZXRf
U3RhdHVzQ29kZQBIdHRwU3RhdHVzQ29kZQBnZXRfSXNTdWNjZXNzU3RhdHVzQ29kZQBIdHRwUmVz
cG9uc2VNZXNzYWdlAERhdGFUYWJsZQBWYXJpYWJsZQBJRGlzcG9zYWJsZQBUb0RvdWJsZQBSdW50
aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBnZXRfV29vbFN0eWxlAHNldF9Xb29sU3R5
bGUARGF0ZVRpbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBUeXBlAGdldF9hc3Nl
dF90eXBlAHNldF9hc3NldF90eXBlAGdldF9ldmVudF90eXBlAHNldF9ldmVudF90eXBlAEZhaWx1
cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAENhcHR1cmUAVlNUQVJU
U2NyaXB0T2JqZWN0TW9kZWxCYXNlAEludGVybmFsRGF0YUNvbGxlY3Rpb25CYXNlAEFwcGxpY2F0
aW9uU2V0dGluZ3NCYXNlAERpc3Bvc2UAUGFyc2UAZ2V0X0xvdExvY2F0aW9uRGF0ZQBzZXRfTG90
TG9jYXRpb25EYXRlAGdldF9Xb29sUmVjZWlwdERhdGUAc2V0X1dvb2xSZWNlaXB0RGF0ZQBFZGl0
b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVz
ZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmli
dXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFy
Z2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3Nl
bWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUA
QXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNT
Y3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVu
dGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHZhbHVlAGdldF9Hcm9zc0tnAHNl
dF9Hcm9zc0tnAEVuY29kaW5nAHNldF9TdHJpbmdFc2NhcGVIYW5kbGluZwBTeXN0ZW0uUnVudGlt
ZS5WZXJzaW9uaW5nAFRvU3RyaW5nAExvZwBnZXRfU3RvcmFnZU9yZwBzZXRfU3RvcmFnZU9yZwBN
YXRjaABVcmkATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sARGVjaW1hbABMb3RSZWNlaXZlZE1vZGVsAFNjcmlwdE9i
amVjdE1vZGVsAERvY3VtZW50TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUXzdkMTBmM2Zk
MDZjMjRjOGRiYWU4MjlmOTNlNTQ4YzRkLmRsbABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJj
ZU1hbgBTY3JpcHRNYWluAGdldF9Mb3RMb2NhdGlvbgBzZXRfTG90TG9jYXRpb24AU3lzdGVtLkNv
bmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ARGF0YVRh
YmxlQ29sbGVjdGlvbgBHcm91cENvbGxlY3Rpb24ARGF0YVJvd0NvbGxlY3Rpb24ARXhjZXB0aW9u
AE5ld3RvbnNvZnQuSnNvbgBnZXRfUHJvZHVjZXJObwBzZXRfUHJvZHVjZXJObwBnZXRfTG90Tm8A
c2V0X0xvdE5vAEN1bHR1cmVJbmZvAFN5c3RlbS5OZXQuSHR0cABHcm91cABDaGFyAGdldF9UYWxt
YW5SZWZlcmVuY2VOdW1iZXIAc2V0X1RhbG1hblJlZmVyZW5jZU51bWJlcgBnZXRfTG90Tm9DYXRl
Z29yeVNlYXNvbk51bWJlcgBzZXRfTG90Tm9DYXRlZ29yeVNlYXNvbk51bWJlcgBnZXRfUmVzb3Vy
Y2VNYW5hZ2VyAElFbnVtZXJhdG9yAEdldEVudW1lcmF0b3IATWF0Y2hFdmFsdWF0b3IALmN0b3IA
LmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2Vz
AGdldF9yZWZlcmVuY2VzAHNldF9yZWZlcmVuY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfMDA3YWY5
MjAwMjkyNGQ3ZWJiNmYzMzI3NGVlNGUxMjkuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2Vz
AERlYnVnZ2luZ01vZGVzAFNUXzAwN2FmOTIwMDI5MjRkN2ViYjZmMzMyNzRlZTRlMTI5LlByb3Bl
cnRpZXMAZ2V0X05vT2ZCYWxlcwBzZXRfTm9PZkJhbGVzAGdldF9UYWJsZXMAZ2V0X1ZhcmlhYmxl
cwBOdW1iZXJTdHlsZXMAZ2V0X3RhZ3MAc2V0X3RhZ3MASnNvblNlcmlhbGl6ZXJTZXR0aW5ncwBT
eXN0ZW0uVGhyZWFkaW5nLlRhc2tzAGdldF9SV1NDZXJ0aWZpY2F0aW9uRGV0YWlscwBzZXRfUldT
Q2VydGlmaWNhdGlvbkRldGFpbHMAQ29udGFpbnMAU3lzdGVtLlRleHQuUmVndWxhckV4cHJlc3Np
b25zAFN5c3RlbS5Db2xsZWN0aW9ucwBnZXRfR3JvdXBzAFN5c3RlbS5OZXQuSHR0cC5IZWFkZXJz
AEh0dHBIZWFkZXJzAEh0dHBSZXF1ZXN0SGVhZGVycwBnZXRfRGVmYXVsdFJlcXVlc3RIZWFkZXJz
AERlY29kZUVuY29kZWROb25Bc2NpaUNoYXJhY3RlcnMAU3VjY2VzcwBzZXRfQmFzZUFkZHJlc3MA
Z2V0X0R0cwBTY3JpcHRSZXN1bHRzAGdldF9yZWNpcGllbnRzAHNldF9yZWNpcGllbnRzAGdldF9l
dmVudHMAc2V0X2V2ZW50cwBnZXRfUldTU3RhdHVzAHNldF9SV1NTdGF0dXMAZ2V0X011bGVzaW5n
U3RhdHVzAHNldF9NdWxlc2luZ1N0YXR1cwBnZXRfUm93cwBnZXRfdXBkYXRlZF9hdABzZXRfdXBk
YXRlZF9hdABnZXRfY3JlYXRlZF9hdABzZXRfY3JlYXRlZF9hdABDb25jYXQAU2VyaWFsaXplT2Jq
ZWN0AERlc2VyaWFsaXplT2JqZWN0AFN5c3RlbS5OZXQARGF0YVNldABnZXRfRGVmYXVsdABnZXRf
UmVzdWx0AHNldF9UYXNrUmVzdWx0AEh0dHBDbGllbnQAZ2V0X0N1cnJlbnQAZ2V0X0NvbnRlbnQA
U3RyaW5nQ29udGVudABIdHRwQ29udGVudABFdmVudABnZXRfQ291bnQASnNvbkNvbnZlcnQAWW91
ckpTT05PdXRwdXQATW92ZU5leHQAU3lzdGVtLlRleHQAZ2V0X05vdwBEYXRhUm93AFJlZ2V4AGdl
dF9Bc3NlbWJseQBvcF9FcXVhbGl0eQBnZXRfdmlzaWJpbGl0eQBzZXRfdmlzaWJpbGl0eQBJc051
bGxPckVtcHR5AAAALwoACgBCAEUARwBJAE4AIABXAG8AbwBsACAAUgBlAGMAZQBpAHYAZQBkADoA
IAAAMSQAUAByAG8AagBlAGMAdAA6ADoAUwBlAHIAdgBpAGMAZQBQAG8AcwB0AFUAcgBsAAAvJABQ
AHIAbwBqAGUAYwB0ADoAOgBTAGUAcgB2AGkAYwBlAEcAZQB0AFUAcgBsAAAhJABQAHIAbwBqAGUA
YwB0ADoAOgBhAHAAaQBrAGUAeQAAPVUAcwBlAHIAOgA6AHYAYQByAEwAbwB0AFIAZQBjAGUAaQB2
AGUAZABSAGUAcwB1AGwAdABMAGkAcwB0AAAbCgAKAFIAbwB3ACAAQwBvAHUAbgB0ADoAIAAADWEA
cABpAGsAZQB5AAAPTABvAHQAIABOAG8ALgAAI1cAbwBvAGwAIABSAGUAYwBlAGkAcAB0ACAARABh
AHQAZQAAL1QAYQBsAG0AYQBuACAAUgBlAGYAZQByAGUAbgBjAGUAIABOAHUAbQBiAGUAcgAAIUwA
bwB0AE4AbwAtAEMAYQB0AC0AUwBlAGEAcwBvAG4AAR1HAHIAbwBzAHMAIABLAEcAIAAoAEwAbwB0
ACkAABlMAG8AdAAgAEwAbwBjAGEAdABpAG8AbgAAI0wAbwB0ACAATABvAGMAYQB0AGkAbwBuACAA
RABhAHQAZQAAE1MAdAB5AGwAZQBUAHkAcABlAAAPQgBhAGwAZQAgAEkARAAAGU4AbwAuACAAbwBm
ACAAQgBhAGwAZQBzAAAfTQB1AGwAZQBzAGkAbgBnACAAUwB0AGEAdAB1AHMAABVSAFcAUwAgAFMA
dABhAHQAdQBzAAAzUgBXAFMAIABDAGUAcgB0AGkAZgBpAGMAYQB0AGkAbwBuACAARABlAHQAYQBp
AGwAcwAAGVAAcgBvAGQAdQBjAGUAcgAgAE4AbwAuAAAXUwB0AG8AcgBhAGcAZQAgAE8AcgBnAAAV
eQB5AHkAeQAtAE0ATQAtAGQAZAABG1cATwBPAEwAXwBSAEUAQwBFAEkAVgBFAEQAABFXAE8ATwBM
AF8ATABPAFQAAGciAE4AbwAgAGQAbwBjAHUAbQBlAG4AdAAgAHcAYQBzACAAZgBvAHUAbgBkACAA
dwBpAHQAaAAgAGEAIABtAGEAdABjAGgAaQBuAGcAIABkAG8AYwB1AG0AZQBuAHQAXwBpAGQAIgAA
AyIAAAciACwAIgAAIXsAIgBkAG8AYwB1AG0AZQBuAHQAXwBpAGQAIgA6ACIAADsiACwAIgBkAG8A
YwB1AG0AZQBuAHQAIgA6ACAAewAiAGEAcwBzAGUAdABfAHQAeQBwAGUAIgA6ACIAACUiACwAIgBy
AGUAZgBlAHIAZQBuAGMAZQBzACIAOgAgAFsAIgAAGyIAXQAsACAAIgB0AGEAZwBzACIAOgAgAFsA
ADddAH0ALAAiAGUAdgBlAG4AdAAiADoAIAB7ACIAZQB2AGUAbgB0AF8AdAB5AHAAZQAiADoAIgAA
QyIALAAiAHYAaQBzAGkAYgBpAGwAaQB0AHkAIgA6ACAAIgBQAFUAQgBMAEkAQwAiACwAIAAiAGQA
YQB0AGEAIgA6AAAFfQB9AAAvCgAKAEQAbwBjAHUAbQBlAG4AdAAgAEkAZAAgAHQAbwAgAFAAbwBz
AHQAOgAgAAAhYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AagBzAG8AbgAALQoACgBQAG8AcwB0AGUA
ZAAgAHMAdQBjAGMAZQBzAHMAZgB1AGwAbAB5AC4AADMKAAoAUABvAHMAdABlAGQAIABuAG8AdAAg
AHMAdQBjAGMAZQBzAHMAZgB1AGwAOgAgAAArCgAKAEUATgBEACAAVwBvAG8AbAAgAFIAZQBjAGUA
aQB2AGUAZAA6ACAAABsKAAoARQB4AGMAZQBwAHQAaQBvAG4AOgAgAAA3XABcAHUAKAA/ADwAVgBh
AGwAdQBlAD4AWwBhAC0AegBBAC0AWgAwAC0AOQBdAHsANAB9ACkAAXFTAFQAXwAwADAANwBhAGYA
OQAyADAAMAAyADkAMgA0AGQANwBlAGIAYgA2AGYAMwAzADIANwA0AGUAZQA0AGUAMQAyADkALgBQ
AHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAtWAGEAbAB1AGUAAAAAAH1S
XhgQnT5JoVIpx5coBmwABCABAQgDIAABBSABARERBCABAQ4GIAEBEYCdOAcfDg4OElURPRJZDgII
El0SYQ4ODg4ODhE9Dg4ODhUSZQEOEmkVEm0BEhQSFBJxEnUReRJ9EoCBBSAAEoCpBAAAET0DIAAO
BQACDg4OByADAQ4IHQUFIAASgLEGIAESgLUcAyAAHAUgABKAuQMgAAgGIAESgMEIBSAAEoDFBiAB
ARKAzQUgABKA0QUgAgEODgQgABJdBCABHA4EAAENHAUVEUUBDQUgAQETAAQAAQgcBRURRQEIBAAB
DhwFAAERPQ4EIAEODgIGDgkgARUSZQESdQ4GFRJlARJ1BCAAEwAEIAAScQcgABUSZQEOBiABARGA
4QQgABF5BRUSZQEOBCABAg4IEAECHgAOEmkECgESCAcVEoDlARIUCCAAFRJtARMABhUSbQESFAUA
AgIODgMgAAIEAAECDgUAAQ4dDgYAAw4ODg4FAAASgOkIIAMBDhKA6Q4LIAIVEmUBEnUOEnEFIAIB
HBgIAAMODg4SgIkIAAESgPURgPkFIAASgP0HIAIBDhKA/QMHAQMFIAASgQEGIAESgQUOBwACCA4R
gQ0It3pcVhk04IkIiYRdzYCAzJEIsD9ffxHVCjoIMK1P5rKmru0EAAAAAAQBAAAAAwYSDAMGET0H
BhUSQQESFAYGFRJBAQ4DBhIYBwYVEUUBEUkGBhURRQEIBwYVEUUBET0DBhIQAgYcBgYVEUUBDQQG
EoCVBAYSgJkDBhIoAgYIAwYRLAMGEjAEBhKAiQQgABIMBSABARIMBCAAET0FIAEBET0IIAAVEkEB
EhQJIAEBFRJBARIUByAAFRJBAQ4IIAEBFRJBAQ4EIAASGAUgAQESGAggABURRQERSQkgAQEVEUUB
EUkHIAAVEUUBCAggAQEVEUUBCAggABURRQERPQkgAQEVEUUBET0EIAASEAUgAQESEAQgAQEcByAA
FRFFAQ0IIAEBFRFFAQ0EAAEODgUAABKAlQUAABKAmQYAAQESgJkEAAASKAMAAAEGIAEOEoCNBCgA
EgwDKAAOBCgAET0IKAAVEkEBEhQHKAAVEkEBDgQoABIYCCgAFRFFARFJBygAFRFFAQgIKAAVEUUB
ET0EKAASEAMoABwHKAAVEUUBDQUIABKAlQUIABKAmQQIABIoCAEACAAAAAAAHgEAAQBUAhZXcmFw
Tm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF8wMDdhZjkyMDAyOTI0ZDdlYmI2ZjMz
Mjc0ZWU0ZTEyOQAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIwAABJAQAaLk5FVEZyYW1ld29y
ayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQu
NwAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2Nv
cmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3
N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAA
AAAAAABQQURQQURQtAAAAHRdAAAAAAAAAAAAAI5dAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAACA
XQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAA
AAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAAaBAAAAAAAAAAAAAAa
BDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEA42lJHgAA
AQDjaUkePwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUASQBu
AGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEegMAAAEAUwB0AHIA
aQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAwADQAYgAwAAAAGgABAAEAQwBv
AG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAAAAAAAHAA
JAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwAwADAANwBhAGYAOQAy
ADAAMAAyADkAMgA0AGQANwBlAGIAYgA2AGYAMwAzADIANwA0AGUAZQA0AGUAMQAyADkAAAA+AA8A
AQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANwA3ADUAMwAuADIANwAxADAANwAA
AAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwA3AGQAMQAwAGYAMwBmAGQA
MAA2AGMAMgA0AGMAOABkAGIAYQBlADgAMgA5AGYAOQAzAGUANQA0ADgAYwA0AGQALgBkAGwAbAAA
AEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAA
QAAgACAAMgAwADIAMAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAA
AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAVABfADcAZAAxADAA
ZgAzAGYAZAAwADYAYwAyADQAYwA4AGQAYgBhAGUAOAAyADkAZgA5ADMAZQA1ADQAOABjADQAZAAu
AGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQAXwAwADAANwBhAGYA
OQAyADAAMAAyADkAMgA0AGQANwBlAGIAYgA2AGYAMwAzADIANwA0AGUAZQA0AGUAMQAyADkAAABC
AA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADcANwA1ADMALgAyADcA
MQAwADcAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAu
ADcANwA1ADMALgAyADcAMQAwADcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAMAAAAoD0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Lot Received SQL Task"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{2578EAED-4588-4BE8-A207-5A018696B716}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Lot Received SQL Task"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="2" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{0171E157-04D9-4D7D-8EBC-6B7E3909523F}"
          SQLTask:SqlStatementSource="SELECT Id, [Lot No#] as [Lot No.], [Wool Receipt Date], [Talman Reference Number], [LotNo-Cat-Season], [Gross KG (Lot)], [Lot Location], [Lot Location Date], [StyleType], [Bale ID], &#xA;[No# of Bales] as [No. of Bales], [Mulesing Status], [RWS Status], [RWS Certification Details], [Producer No#] as [Producer No.], [Storage Org]&#xA;FROM BC_WoolReceipt&#xA;where Processed = 0&#xA;order by [Wool Receipt Date] desc"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::varLotReceivedResultList" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Lot Received SQL Task OLD"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:Disabled="True"
      DTS:DTSID="{ad2e5536-cd2a-46a2-ac4a-c44c1a735840}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Lot Received SQL Task OLD"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="2">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="EventFilter">5,7,OnError,13,OnPostExecute,12,OnPreExecute,12,OnTaskFailed,24,ExecuteSQLExecutingQuery</DTS:Property>
        <DTS:Property
          DTS:EventName="ExecuteSQLExecutingQuery"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnError"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnPostExecute"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnPreExecute"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnTaskFailed"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
      </DTS:LoggingOptions>
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{FD10FD16-36E2-45AD-9536-650E87EB15EB}"
          SQLTask:SqlStatementSource="SELECT [Lot No.], [Wool Receipt Date], [Talman Reference Number], [LotNo-Cat-Season], [Gross KG (Lot)], [Lot Location], [Lot Location Date], [StyleType], [Bale ID], [No. of Bales], &#xA;[Mulesing Status], [RWS Status], [RWS Certification Details], [Producer No.], [Storage Org]&#xA;FROM BC_vw_WoolReceipt&#xA;ORDER BY [Talman Reference Number] DESC"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::varLotReceivedResultList" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\NOT NEEDED - Foreach Loop to update BC_WoolReceipt to Processed"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:Disabled="True"
      DTS:DTSID="{9D57EE65-09CA-4665-823C-15940C15B528}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="NOT NEEDED - Foreach Loop to update BC_WoolReceipt to Processed">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachADOEnumerator"
        DTS:DTSID="{B7E2E174-3FE1-4313-8299-C903864BB9A3}"
        DTS:ObjectName="{B7E2E174-3FE1-4313-8299-C903864BB9A3}">
        <DTS:ObjectData>
          <FEEADO
            EnumType="EnumerateRowsInFirstTable"
            VarName="User::varLotReceivedResultList" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="2" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\NOT NEEDED - Foreach Loop to update BC_WoolReceipt to Processed\Update BC_WoolReceipt"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{801318D0-7646-4CF6-8FB7-3A6BC2DEA578}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Update BC_WoolReceipt"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{0171E157-04D9-4D7D-8EBC-6B7E3909523F}"
              SQLTask:SqlStatementSource="update BC_WoolReceipt&#xA;set Processed = 1,&#xA;DateProcessed = GETDATE()&#xA;where Id = @Id" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@Id"
                SQLTask:DtsVariableName="User::varBC_WoolReceiptID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="12"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{EB0F393F-20FF-4DFE-8F39-4F37DBC9D6BA}"
          DTS:ObjectName="{EB0F393F-20FF-4DFE-8F39-4F37DBC9D6BA}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::varBC_WoolReceiptID" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Update RFID Tag Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:Disabled="True"
      DTS:DTSID="{24A068C1-138A-421A-888A-3BADD090CA6B}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Update RFID Tag Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="1">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="EventFilter">3,7,OnError,12,OnTaskFailed,18,ScriptTaskLogEntry</DTS:Property>
        <DTS:Property
          DTS:EventName="OnError"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnTaskFailed"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="ScriptTaskLogEntry"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:SelectedLogProviders>
          <DTS:SelectedLogProvider
            DTS:InstanceID="{C69152B5-6489-4050-B908-E8F4D7BDF8A1}" />
        </DTS:SelectedLogProviders>
      </DTS:LoggingOptions>
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_867d8eeb39e64678ac91fb05ffa258a0"
          VSTAMajorVersion="14"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="$Project::apikey,$Project::ServicePostUrl,$Project::ServiceGetUrl,$Project::RecipientId"
          ReadWriteVariables="User::varRFIDTagDiff">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_867d8eeb39e64678ac91fb05ffa258a0.Properties.Settings.get_Default():ST_867d8eeb39e64678ac91fb05ffa258a0.Properties.Sett" +
    "ings")]

namespace ST_867d8eeb39e64678ac91fb05ffa258a0.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
//using Newtonsoft.Json;
using System.Text;
using System.Net.Http;
using System.Collections.Generic;
using System.Linq;
using System.Net;
#endregion

namespace ST_867d8eeb39e64678ac91fb05ffa258a0
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            Dts.Log("\n\n" + "BEGIN Update RFID Tags: " + DateTime.Now, 0, null);

            string servicePostUrl = Dts.Variables["$Project::ServicePostUrl"].Value.ToString();
            string serviceGetUrl = Dts.Variables["$Project::ServiceGetUrl"].Value.ToString();
            string apikey = Dts.Variables["$Project::apikey"].Value.ToString();
            DataSet dsRFID = (DataSet)Dts.Variables["User::varRFIDTagDiff"].Value;
            HttpClient client = new HttpClient();
            client.BaseAddress = new Uri(servicePostUrl);
            client.DefaultRequestHeaders.Add("apikey", apikey);
            string APIPostUrl = servicePostUrl;
            string strAsset = "WOOL_LOT";
            string APIGetUrl = serviceGetUrl;

            try
            {
                ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;

                foreach (DataRow dr in dsRFID.Tables[0].Rows)
                {
                    string strTalmanReferenceNumber = dr["Talman Reference Number"].ToString().Trim();
                    string strBaleId = dr["Bale ID"].ToString().Trim();
                    string[] strSplitBaleId = null;

                    if (strBaleId != null)
                    {
                        strSplitBaleId = strBaleId.ToString().Split(',');
                    }

                    else
                    {
                        Dts.Log("\n\n" + "Bale Id is null for : " + strTalmanReferenceNumber + DateTime.Now, 0, null);
                        Dts.TaskResult = (int)ScriptResults.Failure;
                        break;
                    }

                    serviceGetUrl = APIGetUrl + strTalmanReferenceNumber;
                    var getResponse = client.GetAsync(serviceGetUrl).Result;
                    var responseStringAll = getResponse.Content.ReadAsStringAsync();

                    if (getResponse.StatusCode == System.Net.HttpStatusCode.OK)
                    {
                                               
                        foreach (var BaleId in strSplitBaleId)
                        {
                            string strPost = "{\"document_id\":" + "\"" + strTalmanReferenceNumber + "\"," + "\"document\": {\"asset_type\":" + "\"" + strAsset + "\"," + "\"tags\": [" + "\"" + BaleId + "\"" + "]" + "}}";
                            Dts.Log("\n\n" + "strPost: " + strPost + DateTime.Now, 0, null);

                            try
                            {
                                Dts.Log("\n\n" + "Updating the Document Id : + " + strTalmanReferenceNumber + " with the new RFID Tag of " + BaleId + DateTime.Now, 0, null);

                                HttpContent content = new StringContent(strPost, Encoding.UTF8, "application/json");
                                var varResult = client.PostAsync(servicePostUrl, content).Result;

                                if (varResult.IsSuccessStatusCode)
                                {
                                    Dts.Log("\n\n" + "Posted successfully.", 0, null);
                                    Dts.TaskResult = (int)ScriptResults.Success;
                                }
                                else
                                {
                                    Dts.Log("\n\n" + "Posted not successful: " + varResult.StatusCode, 0, null);
                                    Dts.TaskResult = (int)ScriptResults.Failure;
                                }
                            }

                            catch (Exception ex)
                            {
                                Dts.Log("\n\n" + "Posted not successful: " + strTalmanReferenceNumber, 0, null);
                                //Dts.Log("\n\n" + "Posted not successful: " + varResult.StatusCode, 0, null);
                                Dts.TaskResult = (int)ScriptResults.Failure;
                            }

                        }
                    }

                    else if (getResponse.StatusCode == System.Net.HttpStatusCode.InternalServerError || getResponse.StatusCode == System.Net.HttpStatusCode.NotFound)
                    {
                        Dts.Log("\n\n" + "This Wool Receipt does not exist on the Blockchain : " + strTalmanReferenceNumber + DateTime.Now, 0, null);
                        
                    }



                    //if (strSplitBaleId != null && strSplitBaleId.Count() > 0)
                    //{
                       

                    //    if (getResponse.StatusCode == System.Net.HttpStatusCode.OK)
                    //    {
                    //        string strPost = "{\"document_id\":" + "\"" + strTalmanReferenceNumber + "\"," + "\"document\": {\"asset_type\":" + "\"" + strAsset + "\"," + "\"tags\": [" + "\"" + strBaleId + "\"" + "]" + "}}";
                    //        Dts.Log("\n\n" + "strPost: " + strPost + DateTime.Now, 0, null);

                    //        try
                    //        {
                    //            Dts.Log("\n\n" + "Updating the Document Id : + " + strTalmanReferenceNumber + " with the new RFID Tag of " + strBaleId + DateTime.Now, 0, null);

                    //            //HttpContent content = new StringContent(strPost, Encoding.UTF8, "application/json");
                    //            //var varResult = client.PostAsync(servicePostUrl, content).Result;

                    //            //if (varResult.IsSuccessStatusCode)
                    //            //{
                    //            //    Dts.Log("\n\n" + "Posted successfully.", 0, null);
                    //            //    Dts.TaskResult = (int)ScriptResults.Success;
                    //            //}
                    //            //else
                    //            //{
                    //            //    Dts.Log("\n\n" + "Posted not successful: " + varResult.StatusCode, 0, null);
                    //            //    Dts.TaskResult = (int)ScriptResults.Failure;
                    //            //}
                    //        }

                    //        catch (Exception ex)
                    //        {
                    //            Dts.Log("\n\n" + "Posted not successful: " + strTalmanReferenceNumber, 0, null);
                    //            //Dts.Log("\n\n" + "Posted not successful: " + varResult.StatusCode, 0, null);
                    //            Dts.TaskResult = (int)ScriptResults.Failure;
                    //        }
                    //    }

                    //    else if (getResponse.StatusCode == System.Net.HttpStatusCode.InternalServerError || getResponse.StatusCode == System.Net.HttpStatusCode.NotFound)
                    //    {
                    //        Dts.Log("\n\n" + "This Wool Receipt does not exist on the Blockchain : " + strTalmanReferenceNumber + DateTime.Now, 0, null);
                    //    }

                        
                    //}



                   

                    //if (getResponse.StatusCode == System.Net.HttpStatusCode.OK)
                    //{
                    //    string strPost = "{\"document_id\":" + "\"" + strTalmanReferenceNumber + "\"," + "\"document\": {\"asset_type\":" + "\"" + strAsset + "\"," + "\"tags\": [" + "\"" + strBaleId + "\"" + "]" + "}}";
                    //    Dts.Log("\n\n" + "strPost: " + strPost + DateTime.Now, 0, null);

                    //    try
                    //    {
                    //        Dts.Log("\n\n" + "Updating the Document Id : + " + strTalmanReferenceNumber + " with the new RFID Tag of " + strBaleId + DateTime.Now, 0, null);

                    //        //HttpContent content = new StringContent(strPost, Encoding.UTF8, "application/json");
                    //        //var varResult = client.PostAsync(servicePostUrl, content).Result;

                    //        //if (varResult.IsSuccessStatusCode)
                    //        //{
                    //        //    Dts.Log("\n\n" + "Posted successfully.", 0, null);
                    //        //    Dts.TaskResult = (int)ScriptResults.Success;
                    //        //}
                    //        //else
                    //        //{
                    //        //    Dts.Log("\n\n" + "Posted not successful: " + varResult.StatusCode, 0, null);
                    //        //    Dts.TaskResult = (int)ScriptResults.Failure;
                    //        //}
                    //    }

                    //    catch (Exception ex)
                    //    {
                    //        Dts.Log("\n\n" + "Posted not successful: " + strTalmanReferenceNumber, 0, null);
                    //        //Dts.Log("\n\n" + "Posted not successful: " + varResult.StatusCode, 0, null);
                    //        Dts.TaskResult = (int)ScriptResults.Failure;
                    //    }
                    //}

                    //else if (getResponse.StatusCode == System.Net.HttpStatusCode.InternalServerError || getResponse.StatusCode == System.Net.HttpStatusCode.NotFound)
                    //{
                    //    Dts.Log("\n\n" + "This Wool Receipt does not exist on the Blockchain : " + strTalmanReferenceNumber + DateTime.Now, 0, null);
                    //}
                }

                
            }

            catch (Exception ex)
            {
                Dts.Log("\n\n" + "Exception: " + ex.ToString(), 0, null);
                Dts.TaskResult = (int)ScriptResults.Failure;
            }            
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_867d8eeb39e64678ac91fb05ffa258a0.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{CFC86A1A-B9F3-446B-84D2-D2A2A0FA14B9}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_867d8eeb39e64678ac91fb05ffa258a0</RootNamespace>
    <AssemblyName>ST_867d8eeb39e64678ac91fb05ffa258a0</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_867d8eeb39e64678ac91fb05ffa258a0</msb:CodeName>
		<msb:DisplayName>ST_867d8eeb39e64678ac91fb05ffa258a0</msb:DisplayName>
		<msb:ProjectId>{7A5F125D-10B3-410E-9742-D0CCE1DEDA68}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_867d8eeb39e64678ac91fb05ffa258a0.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_867d8eeb39e64678ac91fb05ffa258a0")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_867d8eeb39e64678ac91fb05ffa258a0")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_867d8eeb39e64678ac91fb05ffa258a0.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_867d8eeb39e64678ac91fb05ffa258a0.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_867d8eeb39e64678ac91fb05ffa258a0.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_867d8eeb39e64678ac91fb05ffa258a0.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_867d8eeb39e64678ac91fb05ffa258a0.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_867d8eeb39e64678ac91fb05ffa258a0.dll">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
I1N0cmluZ3MAAAAAqA0AAAwEAAAjVVMAtBEAABAAAAAjR1VJRAAAAMQRAAA8AgAAI0Jsb2IAAAAA
AAAAAgAAAVcdogkJAwAAAPoBMwAWAAABAAAANQAAAAUAAAAGAAAACQAAAAEAAAA6AAAAAgAAABAA
AAABAAAAAgAAAAMAAAAEAAAAAQAAAAEAAAAGAAAAAQAAAAEAAAAAAGcEAQAAAAAABgAGA8QFBgCV
A8QFBgBSArEFDwA4BgAABgB/Av8EBgDpAv8EBgDKAv8EBgB8A/8EBgAmA/8EBgA/A/8EBgCWAv8E
BgCxAswDCgBaAxYECgCuARYEDgBjB2UAEgCXB00FBgBAAa0EBgCKBa8GEgDpAE0FEgDIB00FFgDC
AFgHBgAQAa0EBgA3Ba0EBgC5BK0EBgA1ArEFBgBRB60EBgBmBeQFBgBBBeoEFgAFAlEEFgBmAlEE
FgDlAdUEBgAaAsQFCgA/BBYEBgDoA60EGgCFBkkBGgAHAUkBFgDzA60EEgDmBsIGEgDaBsIGFgB2
BVgHFgBpAVgHDgARBWUADgD9AGUADgAlBWUADgDKAWUADgDxB2UABgBdBa0EBgAlAJgGBgDDA90H
EgC6B00FBgB5Aa0EBgAcAa0EBgD9B/8EAAAAADUAAAAAAAEAAQABABAAygQBADkAAQABAAAAEADr
BUcGaQABAAMAAAEQAI8GRwZ9AAMABwADAQAAMwcAAGEABAAKABEAvgRAAREAngFEAREAowBIAQYG
XQBMAVaAEwdPAVaAfgFPAVAgAAAAAIYA0AQGAAEAhCQAAAAAhhikBQYAAQCMJAAAAACDGKQFBgAB
AJQkAAAAAJMIYgVTAQEAwCQAAAAAkwiGAVgBAQDHJAAAAACTCJIBXQEBAM8kAAAAAJYIcQdjAQIA
1iQAAAAAhhikBQYAAgDeJAAAAACRGKoFaAECAAAAAQC9AwkApAUBABEApAUGABkApAUKACkApAUQ
ADEApAUQADkApAUQAEEApAUQAEkApAUQAFEApAUQAFkApAUQAGEApAUQAGkApAUGAMkApAUGAPEA
pAUVAAEBpAUGAHEAKwdAAIkA6QdGAIkA5gNLABEBSgdPAAkB7wNVAAkBgQZdABkBpARjACEBswNq
ANEA5gNLAIEApAUGACkBpAUQAIEAGwduAIEA+QZ1ADkBnwB7AEEBjwSBAHkAdgaIAFEBpASOAFkB
QQeVAGkBlgWbAJEAogdqAHEBpASgABEBtARLABEBawelABEBSgesAAkBiAcBAIEAjACzAAwAfQfG
AJkArgfLAKEAegDQAJkAswDZABEBSgfeAIkBLADkAJEBpAXqAIEAlQDzAJkA0QAAAZEA1AcAAbEA
/QEGAHEApAUGANEApAUGAJkBLgEEAZkB+QcNAdkApAUTAfkApAUGAAgAFAA2AQgAGAA7ASkAcwCj
AS4ACwB7AS4AEwCEAS4AGwCjAS4AIwCsAS4AKwDVAS4AMwDVAS4AOwDVAS4AQwCsAS4ASwDbAS4A
UwDVAS4AWwDyAUMAYwA7AUkAcwCjAWEAewA7AWMAawA7ARsAAwABAAQAAwAAAGYFbAEAAKYBcQEA
AHUHdgECAAQAAwACAAUABQABAAYABQACAAcABwC+AASAAAABAAAAVh6fYQAAAAAAAAEAAAAEAAAA
AAAAAAAAAAAbAXEAAAAAAA0AAAAAAAAAAAAAACQB9wMAAAAABAAAAAAAAAAAAAAAGwFlAAAAAAAE
AAAAAAAAAAAAAAAtAU0FAAAAAAQAAAAAAAAAAAAAABsBrQQAAAAADQAAAAAAAAAAAAAAJAE+AAAA
AAAAAAAAAQAAAPUFAAAFAAIAAAAAU1RfODY3ZDhlZWIzOWU2NDY3OGFjOTFmYjA1ZmZhMjU4YTAA
VGFza2AxAGdldF9VVEY4ADxNb2R1bGU+AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2
YWx1ZV9fAFN5c3RlbS5EYXRhAG1zY29ybGliAFJlYWRBc1N0cmluZ0FzeW5jAEdldEFzeW5jAFBv
c3RBc3luYwBBZGQAZGVmYXVsdEluc3RhbmNlAGdldF9TdGF0dXNDb2RlAEh0dHBTdGF0dXNDb2Rl
AGdldF9Jc1N1Y2Nlc3NTdGF0dXNDb2RlAEh0dHBSZXNwb25zZU1lc3NhZ2UARGF0YVRhYmxlAFZh
cmlhYmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAERh
dGVUaW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAU2VjdXJpdHlQcm90b2NvbFR5
cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJU
U2NyaXB0T2JqZWN0TW9kZWxCYXNlAEludGVybmFsRGF0YUNvbGxlY3Rpb25CYXNlAEFwcGxpY2F0
aW9uU2V0dGluZ3NCYXNlAERpc3Bvc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5l
cmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0
cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFz
c2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJs
eUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21w
aWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3Nl
bWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUA
QXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdl
dF9WYWx1ZQB2YWx1ZQBFbmNvZGluZwBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5n
AExvZwBVcmkATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVu
dE1vZGVsAFNUXzg2N2Q4ZWViMzllNjQ2NzhhYzkxZmIwNWZmYTI1OGEwLmRsbABzZXRfU2VjdXJp
dHlQcm90b2NvbABnZXRfSXRlbQBTeXN0ZW0AVHJpbQBFbnVtAHJlc291cmNlTWFuAFNjcmlwdE1h
aW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxl
Y3Rpb24ARGF0YVRhYmxlQ29sbGVjdGlvbgBEYXRhUm93Q29sbGVjdGlvbgBFeGNlcHRpb24AQ3Vs
dHVyZUluZm8AU3lzdGVtLk5ldC5IdHRwAENoYXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBTZXJ2aWNl
UG9pbnRNYW5hZ2VyAElFbnVtZXJhdG9yAEdldEVudW1lcmF0b3IALmN0b3IALmNjdG9yAFN5c3Rl
bS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNv
dXJjZXMAU1RfODY3ZDhlZWIzOWU2NDY3OGFjOTFmYjA1ZmZhMjU4YTAuUHJvcGVydGllcy5SZXNv
dXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUXzg2N2Q4ZWViMzllNjQ2NzhhYzkxZmIw
NWZmYTI1OGEwLlByb3BlcnRpZXMAZ2V0X1RhYmxlcwBnZXRfVmFyaWFibGVzAFNldHRpbmdzAFN5
c3RlbS5UaHJlYWRpbmcuVGFza3MAU3lzdGVtLkNvbGxlY3Rpb25zAFN5c3RlbS5OZXQuSHR0cC5I
ZWFkZXJzAEh0dHBIZWFkZXJzAEh0dHBSZXF1ZXN0SGVhZGVycwBnZXRfRGVmYXVsdFJlcXVlc3RI
ZWFkZXJzAFN1Y2Nlc3MAc2V0X0Jhc2VBZGRyZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBnZXRf
Um93cwBDb25jYXQAT2JqZWN0AFN5c3RlbS5OZXQARGF0YVNldABTcGxpdABnZXRfRGVmYXVsdABn
ZXRfUmVzdWx0AHNldF9UYXNrUmVzdWx0AEh0dHBDbGllbnQAZ2V0X0N1cnJlbnQAZ2V0X0NvbnRl
bnQAU3RyaW5nQ29udGVudABIdHRwQ29udGVudABNb3ZlTmV4dABTeXN0ZW0uVGV4dABnZXRfTm93
AERhdGFSb3cAZ2V0X0Fzc2VtYmx5AAAAADUKAAoAQgBFAEcASQBOACAAVQBwAGQAYQB0AGUAIABS
AEYASQBEACAAVABhAGcAcwA6ACAAADEkAFAAcgBvAGoAZQBjAHQAOgA6AFMAZQByAHYAaQBjAGUA
UABvAHMAdABVAHIAbAAALyQAUAByAG8AagBlAGMAdAA6ADoAUwBlAHIAdgBpAGMAZQBHAGUAdABV
AHIAbAAAISQAUAByAG8AagBlAGMAdAA6ADoAYQBwAGkAawBlAHkAAClVAHMAZQByADoAOgB2AGEA
cgBSAEYASQBEAFQAYQBnAEQAaQBmAGYAAA1hAHAAaQBrAGUAeQAAEVcATwBPAEwAXwBMAE8AVAAA
L1QAYQBsAG0AYQBuACAAUgBlAGYAZQByAGUAbgBjAGUAIABOAHUAbQBiAGUAcgAAD0IAYQBsAGUA
IABJAEQAADEKAAoAQgBhAGwAZQAgAEkAZAAgAGkAcwAgAG4AdQBsAGwAIABmAG8AcgAgADoAIAAA
IXsAIgBkAG8AYwB1AG0AZQBuAHQAXwBpAGQAIgA6ACIAADsiACwAIgBkAG8AYwB1AG0AZQBuAHQA
IgA6ACAAewAiAGEAcwBzAGUAdABfAHQAeQBwAGUAIgA6ACIAABkiACwAIgB0AGEAZwBzACIAOgAg
AFsAIgAACSIAXQB9AH0AABcKAAoAcwB0AHIAUABvAHMAdAA6ACAAAD8KAAoAVQBwAGQAYQB0AGkA
bgBnACAAdABoAGUAIABEAG8AYwB1AG0AZQBuAHQAIABJAGQAIAA6ACAAKwAgAAA1IAB3AGkAdABo
ACAAdABoAGUAIABuAGUAdwAgAFIARgBJAEQAIABUAGEAZwAgAG8AZgAgAAAhYQBwAHAAbABpAGMA
YQB0AGkAbwBuAC8AagBzAG8AbgAALQoACgBQAG8AcwB0AGUAZAAgAHMAdQBjAGMAZQBzAHMAZgB1
AGwAbAB5AC4AADMKAAoAUABvAHMAdABlAGQAIABuAG8AdAAgAHMAdQBjAGMAZQBzAHMAZgB1AGwA
OgAgAABvCgAKAFQAaABpAHMAIABXAG8AbwBsACAAUgBlAGMAZQBpAHAAdAAgAGQAbwBlAHMAIABu
AG8AdAAgAGUAeABpAHMAdAAgAG8AbgAgAHQAaABlACAAQgBsAG8AYwBrAGMAaABhAGkAbgAgADoA
IAAAGwoACgBFAHgAYwBlAHAAdABpAG8AbgA6ACAAAHFTAFQAXwA4ADYANwBkADgAZQBlAGIAMwA5
AGUANgA0ADYANwA4AGEAYwA5ADEAZgBiADAANQBmAGYAYQAyADUAOABhADAALgBQAHIAbwBwAGUA
cgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAAEsT/gSnMABHoERop2xCgMYABCABAQgD
IAABBSABARERBCABAQ4FIAEBEXUkBxYODg4SPRJBDg4RRRJJDg4dDhJNHQ4IDg4SURJNEVUSWRJd
BSAAEoCFBAAAEUUDIAAOBQACDg4OByADAQ4IHQUFIAASgI0GIAESgJEcAyAAHAYgAQESgJUFIAAS
gJkFIAIBDg4GAAEBEYClBSAAEoCpBiABEoCtCAUgABKAsQQgABJJBCABHA4GIAEdDh0DBgADDg4O
DgogARUSgMEBEk0OBxUSgMEBEk0EIAATAAQgABJRCCAAFRKAwQEOBCAAEVUFAAEOHQ4FAAASgMUI
IAMBDhKAxQ4MIAIVEoDBARJNDhJRAyAAAggAARKAzRGA0QUgABKA1QcgAgEOEoDVCLd6XFYZNOCJ
CImEXc2AgMyRCLA/X38R1Qo6BAAAAAAEAQAAAAMGEm0DBhJxAwYSEAIGCAMGERQEAAASbQQAABJx
BQABARJxBAAAEhADAAABBAgAEm0ECAAScQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhj
ZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF84NjdkOGVlYjM5ZTY0Njc4YWM5MWZiMDVmZmEy
NThhMAAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIxAABJAQAaLk5FVEZyYW1ld29yayxWZXJz
aW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNbQAAADO
yu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZl
cnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5
MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFE
UEFEULQAAADMOQAAAAAAAAAAAADmOQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2DkAAAAAAAAA
AAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAn2FWHgAAAQCfYVYePwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABT
AFQAXwA4ADYANwBkADgAZQBlAGIAMwA5AGUANgA0ADYANwA4AGEAYwA5ADEAZgBiADAANQBmAGYA
YQAyADUAOABhADAAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANwA3
ADYANgAuADIANAA5ADkAMQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQA
XwA4ADYANwBkADgAZQBlAGIAMwA5AGUANgA0ADYANwA4AGEAYwA5ADEAZgBiADAANQBmAGYAYQAy
ADUAOABhADAALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMA
bwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIAMQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBk
AGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0A
ZQAAAFMAVABfADgANgA3AGQAOABlAGUAYgAzADkAZQA2ADQANgA3ADgAYQBjADkAMQBmAGIAMAA1
AGYAZgBhADIANQA4AGEAMAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAA
AABTAFQAXwA4ADYANwBkADgAZQBlAGIAMwA5AGUANgA0ADYANwA4AGEAYwA5ADEAZgBiADAANQBm
AGYAYQAyADUAOABhADAAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4A
MAAuADcANwA2ADYALgAyADQAOQA5ADEAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQBy
AHMAaQBvAG4AAAAxAC4AMAAuADcANwA2ADYALgAyADQAOQA5ADEAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAA+DkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{d5299829-0e9c-48d4-81b9-45b17804c133}"
      DTS:From="Package\Lot Received SQL Task OLD"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Lot Received Script Task OLD" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{73BDD70B-01F5-420A-8EB3-E71BFD2016A8}"
      DTS:From="Package\Execute SQL Task - Truncate BC_STG_WoolReceipt"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Data Flow Task - Populate BC_STG_WoolReceipt"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{A5207237-E0E3-49A9-9A6B-1C076E916137}"
      DTS:From="Package\Data Flow Task - Populate BC_STG_WoolReceipt"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Lot Received RFID Tag Differences"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{A1951057-C22B-450A-BD71-25E667487487}"
      DTS:From="Package\Execute SQL Task Merge BC_STG_WoolReceipt and BC_WoolReceipt"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Lot Received SQL Task"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{A35975AF-E6E2-4E96-A72C-981808102CD5}"
      DTS:From="Package\Lot Received SQL Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Lot Received Script Task" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{E1E18CDA-D78A-424F-BBDC-97CABAD93556}"
      DTS:From="Package\Lot Received Script Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\NOT NEEDED - Foreach Loop to update BC_WoolReceipt to Processed" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{E8D37252-DD7C-4B97-AA8C-F9C0B018A20F}"
      DTS:From="Package\Lot Received RFID Tag Differences"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\Execute SQL Task Merge RFID Tags"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 7]"
      DTS:CreationName=""
      DTS:DTSID="{543E6833-A08E-4815-9A67-1937E018B1DD}"
      DTS:From="Package\Execute SQL Task Merge RFID Tags"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 7"
      DTS:To="Package\Update RFID Tag Script Task"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 8]"
      DTS:CreationName=""
      DTS:DTSID="{F1DB1C33-14C3-41DB-8971-899C536451CE}"
      DTS:From="Package\Update RFID Tag Script Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 8"
      DTS:To="Package\Execute SQL Task Merge BC_STG_WoolReceipt and BC_WoolReceipt"
      DTS:Value="2" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="309.6,41.6"
          Id="Package\Data Flow Task - Populate BC_STG_WoolReceipt"
          TopLeft="54.7,107.1" />
        <NodeLayout
          Size="324,41.6"
          Id="Package\Execute SQL Task - Truncate BC_STG_WoolReceipt"
          TopLeft="47.5,5.49999999999995" />
        <NodeLayout
          Size="408,41.6"
          Id="Package\Execute SQL Task Merge BC_STG_WoolReceipt and BC_WoolReceipt"
          TopLeft="5.50000000000006,513.5" />
        <NodeLayout
          Size="250.4,41.6"
          Id="Package\Execute SQL Task Merge RFID Tags"
          TopLeft="84.3000000000001,310.3" />
        <NodeLayout
          Size="193.6,41.6"
          Id="Package\NOT NEEDED - Foreach Loop to update BC_WoolReceipt to Processed\Update BC_WoolReceipt"
          TopLeft="5.5,5.49999999999995" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="204.8,102.4"
          Size="435.2,145.6"
          Id="Package\NOT NEEDED - Foreach Loop to update BC_WoolReceipt to Processed"
          TopLeft="107.1,818.3" />
        <NodeLayout
          Size="242.4,41.6"
          Id="Package\Lot Received RFID Tag Differences"
          TopLeft="88.3,208.7" />
        <NodeLayout
          Size="193.6,41.6"
          Id="Package\Lot Received Script Task"
          TopLeft="112.7,716.7" />
        <NodeLayout
          Size="217.6,41.6"
          Id="Package\Lot Received Script Task OLD"
          TopLeft="552.699992847443,815.526666231367" />
        <NodeLayout
          Size="188,41.6"
          Id="Package\Lot Received SQL Task"
          TopLeft="115.5,615.1" />
        <NodeLayout
          Size="212,41.6"
          Id="Package\Lot Received SQL Task OLD"
          TopLeft="516.833327717251,675.793333008236" />
        <NodeLayout
          Size="214.4,41.6"
          Id="Package\Update RFID Tag Script Task"
          TopLeft="102.3,411.9" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="622.833327717251,717.393333008236">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="38.6666651301914,98.1333332231309"
              Start="0,0"
              End="38.6666651301914,90.6333332231309">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45.0666666115654" />
                  <mssgle:CubicBezierSegment
                    Point1="0,45.0666666115654"
                    Point2="0,49.0666666115654"
                    Point3="4,49.0666666115654" />
                  <mssgle:LineSegment
                    End="34.6666651301914,49.0666666115654" />
                  <mssgle:CubicBezierSegment
                    Point1="34.6666651301914,49.0666666115654"
                    Point2="38.6666651301914,49.0666666115654"
                    Point3="38.6666651301914,53.0666666115654" />
                  <mssgle:LineSegment
                    End="38.6666651301914,90.6333332231309" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="209.5,47.1">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,59.9999999999999"
              Start="0,0"
              End="0,52.4999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.4999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-25.304453125,20.4453125,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="209.5,148.7">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,59.9999999999999"
              Start="0,0"
              End="0,52.4999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.4999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-25.304453125,20.4453124999999,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="209.5,555.1">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-25.304453125,20.4453125,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="209.5,656.7">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="209.5,758.3">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="115.2,59.9999999999999"
              Start="0,0"
              End="115.2,52.4999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.9999999999999" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.9999999999999"
                    Point2="0,29.9999999999999"
                    Point3="4,29.9999999999999" />
                  <mssgle:LineSegment
                    End="111.2,29.9999999999999" />
                  <mssgle:CubicBezierSegment
                    Point1="111.2,29.9999999999999"
                    Point2="115.2,29.9999999999999"
                    Point3="115.2,33.9999999999999" />
                  <mssgle:LineSegment
                    End="115.2,52.4999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="209.5,250.3">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,59.9999999999999"
              Start="0,0"
              End="0,52.4999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.4999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-25.304453125,20.4453125,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 7]"
          TopLeft="209.5,351.9">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,59.9999999999999"
              Start="0,0"
              End="0,52.4999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.4999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-25.304453125,20.4453124999999,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 8]"
          TopLeft="209.5,453.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60.0000000000001"
              Start="0,0"
              End="0,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-25.304453125,20.4453125,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Data Flow Task - Populate BC_STG_WoolReceipt">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="176,41.6"
          Id="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt"
          TopLeft="15.1,5.49999999999995" />
        <NodeLayout
          Size="184.8,41.6"
          Id="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt"
          TopLeft="5.50000000000001,107.1" />
        <EdgeLayout
          Id="Package\Data Flow Task - Populate BC_STG_WoolReceipt.Paths[ADO NET Source Output]"
          TopLeft="100.5,47.1">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_STG_WoolReceipt">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task - Populate BC_STG_WoolReceipt\BC_vw_WoolReceipt">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>